{
    "componentChunkName": "component---src-pages-mdx-slug-tsx",
    "path": "/components/tiles/",
    "result": {"data":{"mdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Tiles\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Tiles = makeShortcode(\"Tiles\");\nvar Box = makeShortcode(\"Box\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Tiles\"), mdx(\"p\", null, \"Use the Tiles component if you want to layout some items in a responsive way. Tiles is for items with the same width. If you want to set different width for the items use \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"../columns\"\n  }, \"Columns Component\"), \".\\nIt's possible to display the items with space or set a minimum width for all items inside Tiles.\"), mdx(Tiles, {\n    space: \"small\",\n    itemMinWidth: \"200px\",\n    mdxType: \"Tiles\"\n  }, mdx(Box, {\n    border: \"1px solid #ced4da\",\n    bg: \"#e9ecef\",\n    height: \"100px\",\n    mdxType: \"Box\"\n  }), mdx(Box, {\n    border: \"1px solid #ced4da\",\n    bg: \"#e9ecef\",\n    height: \"100px\",\n    mdxType: \"Box\"\n  }), mdx(Box, {\n    border: \"1px solid #ced4da\",\n    bg: \"#e9ecef\",\n    height: \"100px\",\n    mdxType: \"Box\"\n  }), mdx(Box, {\n    border: \"1px solid #ced4da\",\n    bg: \"#e9ecef\",\n    height: \"100px\",\n    mdxType: \"Box\"\n  }), mdx(Box, {\n    border: \"1px solid #ced4da\",\n    bg: \"#e9ecef\",\n    height: \"100px\",\n    mdxType: \"Box\"\n  }), mdx(Box, {\n    border: \"1px solid #ced4da\",\n    bg: \"#e9ecef\",\n    height: \"100px\",\n    mdxType: \"Box\"\n  })), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\",\n    \"metastring\": \"onlyCode\",\n    \"onlyCode\": true\n  }, \"import { Tiles } from '@marigold/components';\\n\")), mdx(\"h2\", null, \"Props\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": \"left\"\n  }, \"Property\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": \"left\"\n  }, \"Type\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": \"left\"\n  }, \"Default\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": \"left\"\n  }, \"Description\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"left\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"space\"), \" (optional)\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"left\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"ResponsiveStyleValue<string>\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"left\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"none\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"left\"\n  }, \"Set space between items\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"left\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"itemMinWidth\"), \" (optional)\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"left\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"ResponsiveStyleValue<string>\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"left\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"250px\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"left\"\n  }, \"Set minimum width for all items inside\")))), mdx(\"h2\", null, \"Examples\"), mdx(\"h3\", null, \"Spacing Tiles\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\",\n    \"metastring\": \"expandCode\",\n    \"expandCode\": true\n  }, \"<Tiles space=\\\"large\\\">\\n  <Box border=\\\"1px solid #ced4da\\\" bg=\\\"#e9ecef\\\" height=\\\"100px\\\" />\\n  <Box border=\\\"1px solid #ced4da\\\" bg=\\\"#e9ecef\\\" height=\\\"100px\\\" />\\n  <Box border=\\\"1px solid #ced4da\\\" bg=\\\"#e9ecef\\\" height=\\\"100px\\\" />\\n  <Box border=\\\"1px solid #ced4da\\\" bg=\\\"#e9ecef\\\" height=\\\"100px\\\" />\\n</Tiles>\\n\")), mdx(\"h3\", null, \"Tiles with min Item width\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"<Tiles space=\\\"xsmall\\\" itemMinWidth=\\\"100px\\\">\\n  <Box border=\\\"1px solid #ced4da\\\" bg=\\\"#e9ecef\\\" height=\\\"100px\\\" />\\n  <Box border=\\\"1px solid #ced4da\\\" bg=\\\"#e9ecef\\\" height=\\\"100px\\\" />\\n  <Box border=\\\"1px solid #ced4da\\\" bg=\\\"#e9ecef\\\" height=\\\"100px\\\" />\\n  <Box border=\\\"1px solid #ced4da\\\" bg=\\\"#e9ecef\\\" height=\\\"100px\\\" />\\n  <Box border=\\\"1px solid #ced4da\\\" bg=\\\"#e9ecef\\\" height=\\\"100px\\\" />\\n  <Box border=\\\"1px solid #ced4da\\\" bg=\\\"#e9ecef\\\" height=\\\"100px\\\" />\\n</Tiles>\\n\")), mdx(\"h3\", null, \"Complexe Tiles with Boxes and Stacks\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"<Tiles itemMinWidth=\\\"400px\\\" space=\\\"small\\\">\\n  <Box border=\\\"1px solid #fa8005\\\" bg=\\\"orange10\\\" p=\\\"small\\\">\\n    <Stack space=\\\"medium\\\" align=\\\"center\\\">\\n      <Image\\n        src=\\\"https://www.pokewiki.de/images/6/63/Sugimori_004.png\\\"\\n        alt=\\\"glumanda\\\"\\n        width={200}\\n        height={200}\\n      />\\n      <Headline level=\\\"4\\\">Glumanda</Headline>\\n      <Text>\\n        Glumanda ist ein Pok\\xE9mon mit dem Typ Feuer und existiert seit der ersten\\n        Spielgeneration. Es ist neben Bisasam und Schiggy eines der\\n        Starter-Pok\\xE9mon in Pok\\xE9mon Rot, Blau, Feuerrot und Blattgr\\xFCn.\\n      </Text>\\n    </Stack>\\n  </Box>\\n  <Box border=\\\"1px solid #fa8005\\\" bg=\\\"orange10\\\" p=\\\"small\\\">\\n    <Stack space=\\\"medium\\\" align=\\\"center\\\">\\n      <Image\\n        src=\\\"https://www.pokewiki.de/images/7/7a/Sugimori_005.png\\\"\\n        alt=\\\"glutexo\\\"\\n        width={200}\\n        height={200}\\n      />\\n      <Headline level=\\\"4\\\">Glutexo</Headline>\\n      <Text>\\n        Glutexo ist ein Pok\\xE9mon mit dem Typ Feuer und existiert seit der ersten\\n        Spielgeneration. Als erste Weiterentwicklung von Glumanda spielt es eine\\n        wichtige Rolle als Starter-Pok\\xE9mon in Pok\\xE9mon Rot, Blau, Feuerrot,\\n        Blattgr\\xFCn.\\n      </Text>\\n    </Stack>\\n  </Box>\\n  <Box border=\\\"1px solid #fa8005\\\" bg=\\\"orange10\\\" p=\\\"small\\\">\\n    <Stack space=\\\"medium\\\" align=\\\"center\\\">\\n      <Image\\n        src=\\\"https://www.pokewiki.de/images/9/96/Sugimori_006.png\\\"\\n        alt=\\\"glurak\\\"\\n        width={250}\\n        height={200}\\n      />\\n      <Headline level=\\\"4\\\">Glurak</Headline>\\n      <Text>\\n        Glurak ist ein Pok\\xE9mon mit den Typen Feuer und Flug und existiert seit\\n        der ersten Spielgeneration. Es stellt die zweite Entwicklungsstufe von\\n        Glumanda und Glutexo dar und ist somit neben Bisaflor und Turtok eine\\n        der Endentwicklungen der Starter-Pok\\xE9mon aus Kanto.\\n      </Text>\\n    </Stack>\\n  </Box>\\n</Tiles>\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"Tiles"},"headings":[{"value":"Tiles"}]}},"pageContext":{"id":"c73b9162-a107-5274-888a-ef2af4c5cb6b","slug":"components/tiles","__params":{"slug":"components"}}},
    "staticQueryHashes": ["2300692853","3402178641"]}