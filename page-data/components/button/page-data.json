{
    "componentChunkName": "component---src-pages-mdx-slug-tsx",
    "path": "/components/button/",
    "result": {"data":{"mdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Button\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar MarigoldTheme = makeShortcode(\"MarigoldTheme\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Button\"), mdx(\"h2\", null, \"Description\"), mdx(\"p\", null, \"With the Button component you can render a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"button\"), \" element.\\nThe style variant and size of the button can be added with the variant prop and is composed like \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"variant.size\"), \".\"), mdx(\"h2\", null, \"Properties\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": \"left\"\n  }, \"Property\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": \"left\"\n  }, \"Type\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": \"left\"\n  }, \"Default\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"left\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"variant\"), \" (optional)\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"left\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"primary\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"secondary\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"ghost\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"text\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"left\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"primary\"))), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"left\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"size\"), \" (optional)\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"left\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"small\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"large\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"left\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"large\"))), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"left\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"disabled\"), \" (optional)\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"left\"\n  }, \"boolean\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"left\"\n  })))), mdx(\"h2\", null, \"Import\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\",\n    \"metastring\": \"onlyCode\",\n    \"onlyCode\": true\n  }, \"import { Button } from '@marigold/components';\\n\")), mdx(\"h2\", null, \"Demo\"), mdx(MarigoldTheme, {\n    mdxType: \"MarigoldTheme\"\n  }, mdx(ActionGroup, {\n    space: \"small\",\n    mdxType: \"ActionGroup\"\n  }, mdx(Button, {\n    mdxType: \"Button\"\n  }, \"Primary\"), mdx(Button, {\n    variant: \"secondary\",\n    mdxType: \"Button\"\n  }, \"Secondary\"), mdx(Button, {\n    variant: \"ghost\",\n    mdxType: \"Button\"\n  }, \"Ghost\"), mdx(Button, {\n    variant: \"text\",\n    mdxType: \"Button\"\n  }, \"Text Only\"))), mdx(\"h2\", null, \"Live-Code Example\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\",\n    \"metastring\": \"expandCode\",\n    \"expandCode\": true\n  }, \"<Button\\n  variant=\\\"secondary\\\"\\n  size=\\\"small\\\"\\n  onClick={() => {\\n    alert('Hello!');\\n  }}\\n>\\n  Secondary\\n</Button>\\n\")), mdx(\"h2\", null, \"Usage\"), mdx(\"h3\", null, \"Primary Button\"), mdx(\"p\", null, \"The primary button function is to achieve the most common or most important goal of the user, it has more visual weight than the secondary options. There should not be more than one primary button in a screen at the time.\"), mdx(\"br\", null), mdx(\"h4\", null, \"Default\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"<Button>Primary</Button>\\n\")), mdx(\"h4\", null, \"Disabled\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"<Button disabled>Primary</Button>\\n\")), mdx(\"h3\", null, \"Secondary Button\"), mdx(\"p\", null, \"Secondary buttons are an alternative to the user to the Primary option. They are used for actions like canceling, skipping, resetting, declining an offer etc.\"), mdx(\"br\", null), mdx(\"h4\", null, \"Default\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"<Button variant=\\\"secondary\\\">Secondary</Button>\\n\")), mdx(\"h4\", null, \"Disabled\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"<Button variant=\\\"secondary\\\" disabled>\\n  Secondary\\n</Button>\\n\")), mdx(\"h3\", null, \"Ghost Button\"), mdx(\"p\", null, \"They are used for miscellaneous actions, they are important but is not the ones where it is desired that the user focus at the moment.\"), mdx(\"br\", null), mdx(\"h4\", null, \"Default\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"<Button variant=\\\"ghost\\\">Ghost</Button>\\n\")), mdx(\"h4\", null, \"Disabled\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"<Button variant=\\\"ghost\\\" disabled>\\n  Ghost\\n</Button>\\n\")), mdx(\"h3\", null, \"Suplementary Text Button\"), mdx(\"p\", null, \"They can be used in a similar way of a secondary button, but they are meant to be less relevant to the user.\"), mdx(\"br\", null), mdx(\"h4\", null, \"Default\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"<Button variant=\\\"text\\\">Text Only</Button>\\n\")), mdx(\"h4\", null, \"Disabled\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"<Button variant=\\\"text\\\" disabled>\\n  Text Only\\n</Button>\\n\")), mdx(\"h3\", null, \"Button with icon\"), mdx(\"p\", null, \"Icons can be added in Order to make clearer what a button does. Buttons should not be made only with icons, because every user may understand them on a different way.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"<Button>\\n  <Ticket /> Icon Primary\\n</Button>\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"<Button disabled>\\n  <Ticket /> Icon Primary\\n</Button>\\n\")), mdx(\"h3\", null, \"Small Buttons\"), mdx(\"p\", null, \"If there are many actions in one page, is it possible to use small buttons instead of big ones. As well if the page is required to be onpen on mobile devices.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"<Button size=\\\"small\\\">Primary</Button>\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"<Button size=\\\"small\\\" disabled>\\n  Primary\\n</Button>\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"<Button variant=\\\"secondary\\\" size=\\\"small\\\">\\n  Secondary\\n</Button>\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"<Button variant=\\\"secondary\\\" size=\\\"small\\\" disabled>\\n  Secondary\\n</Button>\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"<Button variant=\\\"ghost\\\" size=\\\"small\\\">\\n  Ghost\\n</Button>\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"<Button variant=\\\"ghost\\\" size=\\\"small\\\" disabled>\\n  Ghost\\n</Button>\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"<Button variant=\\\"text\\\" size=\\\"small\\\">\\n  Text Only\\n</Button>\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"<Button variant=\\\"text\\\" size=\\\"small\\\" disabled>\\n  Text Only\\n</Button>\\n\")), mdx(\"h3\", null, \"Small Buttons with icon\"), mdx(\"p\", null, \"Icons can be added in Order to make clearer what a button does. Buttons should not be made only with icons, because every user may understand them on a different way.Icons can be added in Order to make clearer what a button does. Buttons should not be made only with icons, because every user may understand them on a different way.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"<Button size=\\\"small\\\">\\n  <Ticket /> Primary\\n</Button>\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"<Button variant=\\\"secondary\\\" size=\\\"small\\\">\\n  <Direction /> Secondary\\n</Button>\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"<Button variant=\\\"ghost\\\" size=\\\"small\\\">\\n  <CircleUnchecked /> Ghost\\n</Button>\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"<Button variant=\\\"text\\\" size=\\\"small\\\">\\n  <FormatSize /> Text Only\\n</Button>\\n\")), mdx(\"h2\", null, \"Usage\"), mdx(Stack, {\n    space: \"small\",\n    mdxType: \"Stack\"\n  }, mdx(Box, {\n    display: \"grid\",\n    css: {\n      gridGap: 'small',\n      gridTemplateColumns: 'repeat(auto-fit, minmax(min(500px, 100%), 1fr))'\n    },\n    mdxType: \"Box\"\n  }, mdx(DoAndDont, {\n    preview: mdx(ActionGroup, {\n      space: \"small\",\n      mdxType: \"ActionGroup\"\n    }, mdx(Button, {\n      variant: \"ghost\",\n      mdxType: \"Button\"\n    }, \"Ghost\"), mdx(Button, {\n      mdxType: \"Button\"\n    }, \"Primary\")),\n    mdxType: \"DoAndDont\"\n  }, \"Use a ghost button next to a Primary button.\"), mdx(DoAndDont, {\n    preview: mdx(ActionGroup, {\n      space: \"small\",\n      mdxType: \"ActionGroup\"\n    }, mdx(Button, {\n      variant: \"text\",\n      mdxType: \"Button\"\n    }, \"Text\"), mdx(Button, {\n      mdxType: \"Button\"\n    }, \"Primary\")),\n    mdxType: \"DoAndDont\"\n  }, \"Use a Text button next to a Primary button.\"), mdx(DoAndDont, {\n    preview: mdx(ActionGroup, {\n      space: \"small\",\n      mdxType: \"ActionGroup\"\n    }, mdx(Button, {\n      variant: \"text\",\n      mdxType: \"Button\"\n    }, \"Text\"), mdx(Button, {\n      variant: \"text\",\n      mdxType: \"Button\"\n    }, \"Text\")),\n    mdxType: \"DoAndDont\"\n  }, \"Use a Text button next to another text button.\"), mdx(DoAndDont, {\n    dont: true,\n    preview: mdx(ActionGroup, {\n      space: \"small\",\n      mdxType: \"ActionGroup\"\n    }, mdx(Button, {\n      mdxType: \"Button\"\n    }, \"Primary\"), mdx(Button, {\n      mdxType: \"Button\"\n    }, \"Primary\")),\n    mdxType: \"DoAndDont\"\n  }, \"Use two Primary buttons on the same page, there should be only one function that calls the most attention.\"), mdx(DoAndDont, {\n    dont: true,\n    preview: mdx(ActionGroup, {\n      space: \"small\",\n      mdxType: \"ActionGroup\"\n    }, mdx(Button, {\n      variant: \"secondary\",\n      mdxType: \"Button\"\n    }, \"Secondary\"), mdx(Button, {\n      variant: \"secondary\",\n      mdxType: \"Button\"\n    }, \"Secondary\")),\n    mdxType: \"DoAndDont\"\n  }, \"Use two Secondary buttons next to each other, it loses hierarchie and is confusing.\"), mdx(DoAndDont, {\n    dont: true,\n    preview: mdx(ActionGroup, {\n      space: \"small\",\n      mdxType: \"ActionGroup\"\n    }, mdx(Button, {\n      variant: \"secondary\",\n      mdxType: \"Button\"\n    }, \"Secondary\"), mdx(Button, {\n      variant: \"secondary\",\n      size: \"small\",\n      mdxType: \"Button\"\n    }, \"Secondary\")),\n    mdxType: \"DoAndDont\"\n  }, \"Mix normal sized buttons with small buttons inmediatly next or below each other.\"))));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"Button"},"headings":[{"value":"Button"}]}},"pageContext":{"id":"86d5a75a-4cd7-5b52-bdbc-25c18f681106","slug":"components/button","__params":{"slug":"components"}}},
    "staticQueryHashes": ["3402178641"]}