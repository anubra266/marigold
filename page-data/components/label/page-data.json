{
    "componentChunkName": "component---src-pages-mdx-slug-tsx",
    "path": "/components/label/",
    "result": {"data":{"mdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Label\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar MarigoldTheme = makeShortcode(\"MarigoldTheme\");\nvar Label = makeShortcode(\"Label\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Label\"), mdx(\"p\", null, \"With the Label component you can add a HTML \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<Label>\"), \" element to your form.\\nThe variant can be added with the variant prop. The default variant is \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"above\"), \".\"), mdx(MarigoldTheme, {\n    mdxType: \"MarigoldTheme\"\n  }, mdx(Label, {\n    htmlFor: \"labelId\",\n    mdxType: \"Label\"\n  }, \"Just a simple label\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\",\n    \"metastring\": \"onlyCode\",\n    \"onlyCode\": true\n  }, \"import { Label } from '@marigold/components';\\n\")), mdx(FigmaLink, {\n    to: 'https://www.figma.com/file/DFKyTGHAoDxOsUBPszLLxP/%F0%9F%8F%B5%EF%B8%8FMarigold?node-id=92%3A0',\n    mdxType: \"FigmaLink\"\n  }), mdx(\"h2\", null, \"Props\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": \"left\"\n  }, \"Property\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": \"left\"\n  }, \"Type\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": \"left\"\n  }, \"Default\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"left\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"variant\"), \" (optional)\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"left\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"string\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"left\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"above\"))), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"left\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"required\"), \" (optional)\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"left\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"boolean\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"left\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"false\"))), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"left\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"color\"), \" (optional)\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"left\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"ResponsiveStyleValue<string>\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"left\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"text\"))), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"left\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"htmlFor\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"left\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"string\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"left\"\n  })))), mdx(\"h2\", null, \"Examples\"), mdx(\"h3\", null, \"Label required\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"<Label htmlFor=\\\"labelId\\\" required>\\n  I am a required Label!\\n</Label>\\n\")), mdx(\"h3\", null, \"Label colored\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"<Label htmlFor=\\\"labelId\\\" color=\\\"info\\\">\\n  I am a disabled Label!\\n</Label>\\n\")), mdx(\"h3\", null, \"Label above\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"<>\\n  <Label htmlFor=\\\"labelId\\\">Name:</Label>\\n  <Input id=\\\"labelId\\\" />\\n</>\\n\")), mdx(\"h3\", null, \"Label inline\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"<Inline space=\\\"xxsmall\\\">\\n  <Checkbox id=\\\"labelId\\\" />\\n  <Label variant=\\\"inline\\\" htmlFor=\\\"labelId\\\">\\n    Agree to Marigold terms\\n  </Label>\\n</Inline>\\n\")), mdx(\"h3\", null, \"Section Label\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"<Stack>\\n  <Label htmlFor=\\\"labelId\\\" variant=\\\"section\\\">\\n    Payment Selection\\n  </Label>\\n  <Divider variant=\\\"section\\\" />\\n  <Inline space=\\\"small\\\">\\n    <Radio id=\\\"one\\\" name=\\\"Section1\\\" value=\\\"RadioOne\\\" label=\\\"Radio One\\\" />\\n    <Label variant=\\\"inline\\\" htmlFor=\\\"labelId\\\">\\n      Visa\\n    </Label>\\n  </Inline>\\n  <Inline space=\\\"small\\\">\\n    <Radio id=\\\"two\\\" name=\\\"Section2\\\" value=\\\"RadioTwo\\\" label=\\\"Radio Two\\\" />\\n    <Label variant=\\\"inline\\\" htmlFor=\\\"labelId\\\">\\n      Paypal\\n    </Label>\\n  </Inline>\\n  <Inline space=\\\"small\\\">\\n    <Radio id=\\\"two\\\" name=\\\"Section3\\\" value=\\\"RadioThree\\\" label=\\\"Radio Three\\\" />\\n    <Label variant=\\\"inline\\\" htmlFor=\\\"labelId\\\">\\n      Sofort\\xFCberweisung\\n    </Label>\\n  </Inline>\\n</Stack>\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"Label"},"headings":[{"value":"Label"}]}},"pageContext":{"id":"e16627a1-bd9f-5faa-9b07-143164f70850","slug":"components/label","__params":{"slug":"components"}}},
    "staticQueryHashes": ["2300692853","3402178641"]}