{
    "componentChunkName": "component---src-pages-mdx-slug-tsx",
    "path": "/components/tooltip/",
    "result": {"data":{"mdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Tooltip\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar MarigoldTheme = makeShortcode(\"MarigoldTheme\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Tooltip\"), mdx(\"h2\", null, \"Demo\"), mdx(MarigoldTheme, {\n    mdxType: \"MarigoldTheme\"\n  }, mdx(TooltipTrigger, {\n    isOpen: true,\n    mdxType: \"TooltipTrigger\"\n  }, mdx(Button, {\n    variant: \"\",\n    size: \"\",\n    \"aria-label\": \"infoIconButton\",\n    mdxType: \"Button\"\n  }, mdx(Info, {\n    fill: \"info\",\n    mdxType: \"Info\"\n  })), mdx(Tooltip, {\n    mdxType: \"Tooltip\"\n  }, \"Tooltip\"))), mdx(\"br\", null), mdx(\"h2\", null, \"Description\"), mdx(\"p\", null, \"The Tooltip should provide extra information to the user. This information should be\\nsecondary and not escential to perform a task.\\nA tooltip consists of two parts: the \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"trigger\"), \" element and the \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"tooltip\"), \" itself.\\nUsers may reveal the tooltip by hovering or focusing the trigger.\"), mdx(\"h2\", null, \"Properties\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": \"left\"\n  }, \"Property\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": \"left\"\n  }, \"Type\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": \"left\"\n  }, \"Default\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"left\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"variant\"), \" (optional)\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"left\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"string\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"left\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"__default\"))))), mdx(\"h2\", null, \"Import\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\",\n    \"metastring\": \"onlyCode\",\n    \"onlyCode\": true\n  }, \"import { Tooltip, TooltipTrigger } from '@marigold/components';\\n\")), mdx(\"h2\", null, \"Types\"), mdx(\"h3\", null, \"Alignment\"), mdx(\"p\", null, \"Different alignment is coming soon.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\",\n    \"metastring\": \"expandCode\",\n    \"expandCode\": true\n  }, \"<TooltipTrigger>\\n  <Button variant=\\\"\\\" size=\\\"\\\" aria-label=\\\"infoIconButton\\\">\\n    <Info fill=\\\"info\\\" />\\n  </Button>\\n  <Tooltip>Tooltip</Tooltip>\\n</TooltipTrigger>\\n\")), mdx(\"h2\", null, \"Usage\"), mdx(Stack, {\n    space: \"small\",\n    mdxType: \"Stack\"\n  }, mdx(Box, {\n    display: \"grid\",\n    css: {\n      gridGap: 'small',\n      gridTemplateColumns: 'repeat(auto-fit, minmax(min(500px, 100%), 1fr))'\n    },\n    mdxType: \"Box\"\n  }, mdx(DoAndDont, {\n    preview: mdx(TooltipTrigger, {\n      isOpen: true,\n      mdxType: \"TooltipTrigger\"\n    }, mdx(Button, {\n      variant: \"\",\n      size: \"\",\n      \"aria-label\": \"infoIconButton\",\n      mdxType: \"Button\"\n    }, mdx(Info, {\n      fill: \"info\",\n      mdxType: \"Info\"\n    })), mdx(Box, {\n      as: Tooltip,\n      css: {\n        position: 'relative'\n      },\n      mdxType: \"Box\"\n    }, \"Tooltip\")),\n    mdxType: \"DoAndDont\"\n  }, \"Point an information icon.\"), mdx(DoAndDont, {\n    dont: true,\n    preview: mdx(TooltipTrigger, {\n      isOpen: true,\n      mdxType: \"TooltipTrigger\"\n    }, mdx(Button, {\n      variant: \"\",\n      size: \"\",\n      \"aria-label\": \"infoIconButton\",\n      mdxType: \"Button\"\n    }, mdx(Info, {\n      fill: \"info\",\n      mdxType: \"Info\"\n    })), mdx(Box, {\n      as: Tooltip,\n      css: {\n        position: 'relative'\n      },\n      mdxType: \"Box\"\n    }, \"Lorem Ipsum is simply dummy text of the printing and typesetting industry.\")),\n    mdxType: \"DoAndDont\"\n  }, \"Don't make extensive explanations on a tool tip. It is only for short and \\u201Cnice to have\\u201D extra information.\"), mdx(DoAndDont, {\n    dont: true,\n    preview: mdx(TooltipTrigger, {\n      isOpen: true,\n      mdxType: \"TooltipTrigger\"\n    }, mdx(Button, {\n      variant: \"\",\n      size: \"\",\n      \"aria-label\": \"infoIconButton\",\n      mdxType: \"Button\"\n    }, mdx(Info, {\n      fill: \"info\",\n      mdxType: \"Info\"\n    })), mdx(Box, {\n      as: Tooltip,\n      css: {\n        position: 'relative'\n      },\n      mdxType: \"Box\"\n    }, \"If you do not click the box, all data will be deleted.\")),\n    mdxType: \"DoAndDont\"\n  }, \"Don't put highly important information on a tooltip, this element is hidden and should only contain \\u201Cnice to have\\u201D information.\"))));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"Tooltip"},"headings":[{"value":"Tooltip"}]}},"pageContext":{"id":"d6c7c5bb-01e2-5f25-86e8-de3000ee6810","slug":"components/tooltip","__params":{"slug":"components"}}},
    "staticQueryHashes": ["2300692853","3402178641"]}