{
    "componentChunkName": "component---src-pages-mdx-slug-tsx",
    "path": "/components/table/",
    "result": {"data":{"mdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Table\",\n  \"figma\": \"https://www.figma.com/file/DFKyTGHAoDxOsUBPszLLxP/%F0%9F%8F%B5%EF%B8%8FMarigold?node-id=2387%3A1928\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Table\"), mdx(\"p\", null, \"The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Table\"), \" component allows to present data in a table format. It enhances the functionality of regular \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<table>\"), \" elements with the possibility to interact and select the data, as well as, helps with accessibility by providing keyboard navigation.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"<Table aria-label=\\\"Table with multiple selection\\\" selectionMode=\\\"multiple\\\">\\n  <Table.Header>\\n    <Table.Column>Name</Table.Column>\\n    <Table.Column>Firstname</Table.Column>\\n    <Table.Column>House</Table.Column>\\n    <Table.Column>Year of birth</Table.Column>\\n  </Table.Header>\\n  <Table.Body>\\n    <Table.Row key={1}>\\n      <Table.Cell>Potter</Table.Cell>\\n      <Table.Cell>Harry</Table.Cell>\\n      <Table.Cell>Gryffindor</Table.Cell>\\n      <Table.Cell>1980</Table.Cell>\\n    </Table.Row>\\n    <Table.Row key={2}>\\n      <Table.Cell>Malfoy</Table.Cell>\\n      <Table.Cell>Draco</Table.Cell>\\n      <Table.Cell>Slytherin</Table.Cell>\\n      <Table.Cell>1980</Table.Cell>\\n    </Table.Row>\\n    <Table.Row key={3}>\\n      <Table.Cell>Diggory</Table.Cell>\\n      <Table.Cell>Cedric</Table.Cell>\\n      <Table.Cell>Hufflepuff</Table.Cell>\\n      <Table.Cell>1977</Table.Cell>\\n    </Table.Row>\\n    <Table.Row key={4}>\\n      <Table.Cell>Lovegood</Table.Cell>\\n      <Table.Cell>Luna</Table.Cell>\\n      <Table.Cell>Ravenclaw</Table.Cell>\\n      <Table.Cell>1981</Table.Cell>\\n    </Table.Row>\\n  </Table.Body>\\n</Table>\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\",\n    \"metastring\": \"onlyCode\",\n    \"onlyCode\": true\n  }, \"import { Table } from '@marigold/components';\\n\")), mdx(FigmaLink, {\n    to: 'https://www.figma.com/file/DFKyTGHAoDxOsUBPszLLxP/%F0%9F%8F%B5%EF%B8%8FMarigold?node-id=2387%3A1928',\n    mdxType: \"FigmaLink\"\n  }), mdx(\"h2\", null, \"Props\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": \"left\"\n  }, \"Property\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": \"left\"\n  }, \"Type\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": \"left\"\n  }, \"Default\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": \"left\"\n  }, \"Description\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"left\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"selectionMode\"), \" (optional)\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"left\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"'none', 'single', 'multiple'\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"left\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"none\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"left\"\n  }, \"The type of selection that is allowed in the collection.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"left\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"onSelectionChange\"), \" (optional)\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"left\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"(keys: Selection) => any\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"left\"\n  }), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"left\"\n  }, \"Handler that is called when the selection changes.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"left\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"align\"), \" (optional)\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"left\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"left, center, right\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"left\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"left\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"left\"\n  }, \"Align the cell content from the rows except the header.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"left\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"alignHeader\"), \" (optional)\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"left\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"left, center, right\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"left\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"left\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"left\"\n  }, \"Align the header content.\")))), mdx(\"h2\", null, \"Examples\"), mdx(\"h3\", null, \"Selection mode single\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"<Table aria-label=\\\"Table with multiple selection\\\" selectionMode=\\\"single\\\">\\n  <Table.Header>\\n    <Table.Column>Name</Table.Column>\\n    <Table.Column>Firstname</Table.Column>\\n    <Table.Column>House</Table.Column>\\n    <Table.Column>Year of birth</Table.Column>\\n  </Table.Header>\\n  <Table.Body>\\n    <Table.Row key={1}>\\n      <Table.Cell>Potter</Table.Cell>\\n      <Table.Cell>Harry</Table.Cell>\\n      <Table.Cell>Gryffindor</Table.Cell>\\n      <Table.Cell>1980</Table.Cell>\\n    </Table.Row>\\n    <Table.Row key={2}>\\n      <Table.Cell>Malfoy</Table.Cell>\\n      <Table.Cell>Draco</Table.Cell>\\n      <Table.Cell>Slytherin</Table.Cell>\\n      <Table.Cell>1980</Table.Cell>\\n    </Table.Row>\\n    <Table.Row key={3}>\\n      <Table.Cell>Diggory</Table.Cell>\\n      <Table.Cell>Cedric</Table.Cell>\\n      <Table.Cell>Hufflepuff</Table.Cell>\\n      <Table.Cell>1977</Table.Cell>\\n    </Table.Row>\\n    <Table.Row key={4}>\\n      <Table.Cell>Lovegood</Table.Cell>\\n      <Table.Cell>Luna</Table.Cell>\\n      <Table.Cell>Ravenclaw</Table.Cell>\\n      <Table.Cell>1981</Table.Cell>\\n    </Table.Row>\\n  </Table.Body>\\n</Table>\\n\")), mdx(\"h3\", null, \"Selection mode multiple\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"<Table aria-label=\\\"Table with multiple selection\\\" selectionMode=\\\"multiple\\\">\\n  <Table.Header>\\n    <Table.Column>Name</Table.Column>\\n    <Table.Column>Firstname</Table.Column>\\n    <Table.Column>House</Table.Column>\\n    <Table.Column>Year of birth</Table.Column>\\n  </Table.Header>\\n  <Table.Body>\\n    <Table.Row key={1}>\\n      <Table.Cell>Potter</Table.Cell>\\n      <Table.Cell>Harry</Table.Cell>\\n      <Table.Cell>Gryffindor</Table.Cell>\\n      <Table.Cell>1980</Table.Cell>\\n    </Table.Row>\\n    <Table.Row key={2}>\\n      <Table.Cell>Malfoy</Table.Cell>\\n      <Table.Cell>Draco</Table.Cell>\\n      <Table.Cell>Slytherin</Table.Cell>\\n      <Table.Cell>1980</Table.Cell>\\n    </Table.Row>\\n    <Table.Row key={3}>\\n      <Table.Cell>Diggory</Table.Cell>\\n      <Table.Cell>Cedric</Table.Cell>\\n      <Table.Cell>Hufflepuff</Table.Cell>\\n      <Table.Cell>1977</Table.Cell>\\n    </Table.Row>\\n    <Table.Row key={4}>\\n      <Table.Cell>Lovegood</Table.Cell>\\n      <Table.Cell>Luna</Table.Cell>\\n      <Table.Cell>Ravenclaw</Table.Cell>\\n      <Table.Cell>1981</Table.Cell>\\n    </Table.Row>\\n  </Table.Body>\\n</Table>\\n\")), mdx(\"h3\", null, \"Text Alignment\"), mdx(\"p\", null, \"Align column headers and rows to the left, center, or right.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"<Table\\n  aria-label=\\\"Table with multiple selection\\\"\\n  align=\\\"center\\\"\\n  alignHeader=\\\"center\\\"\\n>\\n  <Table.Header>\\n    <Table.Column>Name</Table.Column>\\n    <Table.Column>Firstname</Table.Column>\\n    <Table.Column>House</Table.Column>\\n    <Table.Column>Year of birth</Table.Column>\\n  </Table.Header>\\n  <Table.Body>\\n    <Table.Row key={1}>\\n      <Table.Cell>Potter</Table.Cell>\\n      <Table.Cell>Harry</Table.Cell>\\n      <Table.Cell>Gryffindor</Table.Cell>\\n      <Table.Cell>1980</Table.Cell>\\n    </Table.Row>\\n    <Table.Row key={2}>\\n      <Table.Cell>Malfoy</Table.Cell>\\n      <Table.Cell>Draco</Table.Cell>\\n      <Table.Cell>Slytherin</Table.Cell>\\n      <Table.Cell>1980</Table.Cell>\\n    </Table.Row>\\n    <Table.Row key={3}>\\n      <Table.Cell>Diggory</Table.Cell>\\n      <Table.Cell>Cedric</Table.Cell>\\n      <Table.Cell>Hufflepuff</Table.Cell>\\n      <Table.Cell>1977</Table.Cell>\\n    </Table.Row>\\n    <Table.Row key={4}>\\n      <Table.Cell>Lovegood</Table.Cell>\\n      <Table.Cell>Luna</Table.Cell>\\n      <Table.Cell>Ravenclaw</Table.Cell>\\n      <Table.Cell>1981</Table.Cell>\\n    </Table.Row>\\n  </Table.Body>\\n</Table>\\n\")), mdx(\"h3\", null, \"Dynamic collections\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"() => {\\n  const columns = [\\n    { name: 'Name', key: 'name' },\\n    { name: 'Firstname', key: 'firstname' },\\n    { name: 'House', key: 'house' },\\n    { name: 'Year of birth', key: 'year' },\\n  ];\\n  const rows = [\\n    {\\n      id: '1',\\n      name: 'Potter',\\n      firstname: 'Harry',\\n      house: 'Gryffindor',\\n      year: '1980',\\n    },\\n    {\\n      id: '2',\\n      name: 'Malfoy',\\n      firstname: 'Draco',\\n      house: 'Slytherin',\\n      year: '1980',\\n    },\\n    {\\n      id: '3',\\n      name: 'Diggory',\\n      firstname: 'Cedric',\\n      house: 'Hufflepuff',\\n      year: '1977',\\n    },\\n    {\\n      id: '4',\\n      name: 'Lovegood',\\n      firstname: 'Luna',\\n      house: 'Ravenclaw',\\n      year: '1981',\\n    },\\n  ];\\n  const [selectedKeys, setSelectedKeys] = React.useState(new Set());\\n  return (\\n    <Stack space=\\\"small\\\">\\n      <Table\\n        aria-label=\\\"Example dynamic collection table\\\"\\n        selectionMode=\\\"multiple\\\"\\n        onSelectionChange={key => setSelectedKeys(new Set(key))}\\n      >\\n        <Table.Header columns={columns}>\\n          {column => <Table.Column>{column.name}</Table.Column>}\\n        </Table.Header>\\n        <Table.Body items={rows}>\\n          {item => (\\n            <Table.Row>\\n              {columnKey => <Table.Cell>{item[columnKey]}</Table.Cell>}\\n            </Table.Row>\\n          )}\\n        </Table.Body>\\n      </Table>\\n      <Text>Selected rows: {selectedKeys}</Text>\\n    </Stack>\\n  );\\n};\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"Table"},"headings":[{"value":"Table"}]}},"pageContext":{"id":"b0427e51-5034-54c9-99ed-d7eef8dd222c","slug":"components/table","__params":{"slug":"components"}}},
    "staticQueryHashes": ["2300692853","3402178641"]}