{
    "componentChunkName": "component---src-pages-mdx-slug-tsx",
    "path": "/components/aside/",
    "result": {"data":{"mdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Aside\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar MarigoldTheme = makeShortcode(\"MarigoldTheme\");\nvar Aside = makeShortcode(\"Aside\");\nvar Box = makeShortcode(\"Box\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Aside\"), mdx(\"h2\", null, \"Demo\"), mdx(MarigoldTheme, {\n    mdxType: \"MarigoldTheme\"\n  }, mdx(Aside, {\n    space: \"medium\",\n    mdxType: \"Aside\"\n  }, mdx(Box, {\n    border: \"1px solid #ced4da\",\n    bg: \"#e9ecef\",\n    height: \"100px\",\n    width: \"50px\",\n    mdxType: \"Box\"\n  }), mdx(Box, {\n    border: \"1px solid #ced4da\",\n    bg: \"#e9ecef\",\n    mdxType: \"Box\"\n  }))), mdx(\"h2\", null, \"Description\"), mdx(\"p\", null, \"The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<Aside>\"), \" layout is useful when you want to set two things next to each other and the one has a fixed width (the aside) and the other can have a dynamic width (the content).\"), mdx(\"p\", null, \"It is important to note that the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<Aside>\"), \" must have exactly too children, where none is a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<Fragment>\"), \".\"), mdx(\"h2\", null, \"Properties\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": \"left\"\n  }, \"Property\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": \"left\"\n  }, \"Type\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": \"left\"\n  }, \"Default\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"left\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"space\"), \" (optional)\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"left\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"ResponsiveStyleValue<string>\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"left\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"none\"))), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"left\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"side\"), \" (optional)\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"left\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"left\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"right\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"left\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"left\"))), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"left\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"sideWidth\"), \" (optional)\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"left\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"ResponsiveStyleValue<string>\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"left\"\n  })), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"left\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"stretch\"), \" (optional)\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"left\"\n  }, \"boolean\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"left\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"true\"))), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"left\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"wrap\"), \" (optional)\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"left\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"Non-zero Percentage\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"left\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"50%\"))))), mdx(\"h2\", null, \"Import\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\",\n    \"metastring\": \"onlyCode\",\n    \"onlyCode\": true\n  }, \"import { Aside } from '@marigold/components';\\n\")), mdx(\"h2\", null, \"Types\"), mdx(\"h3\", null, \"Spacing\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"  <Aside space=\\\"medium\\\">\\n    <Box border=\\\"1px solid #ced4da\\\" bg=\\\"#e9ecef\\\" height=\\\"100px\\\" width=\\\"50px\\\" />\\n    <Box border=\\\"1px solid #ced4da\\\" bg=\\\"#e9ecef\\\" />\\n  </Aside>\\n\")), mdx(\"h3\", null, \"Aside on the right\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"  <Aside space=\\\"medium\\\" side=\\\"right\\\">\\n    <Box border=\\\"1px solid #ced4da\\\" bg=\\\"#e9ecef\\\" />\\n    <Box border=\\\"1px solid #ced4da\\\" bg=\\\"#e9ecef\\\" height=\\\"100px\\\" width=\\\"50px\\\" />\\n  </Aside>\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"Aside"},"headings":[{"value":"Aside"}]}},"pageContext":{"id":"7d3a41a5-9ed7-5895-9b92-8f5408c55cc8","slug":"components/aside","__params":{"slug":"components"}}},
    "staticQueryHashes": ["2300692853","3402178641"]}