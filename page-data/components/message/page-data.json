{
    "componentChunkName": "component---src-pages-mdx-slug-tsx",
    "path": "/components/message/",
    "result": {"data":{"mdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Message\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar MarigoldTheme = makeShortcode(\"MarigoldTheme\");\nvar Message = makeShortcode(\"Message\");\nvar Text = makeShortcode(\"Text\");\nvar Stack = makeShortcode(\"Stack\");\nvar Box = makeShortcode(\"Box\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Message\"), mdx(\"h2\", null, \"Demo\"), mdx(MarigoldTheme, {\n    mdxType: \"MarigoldTheme\"\n  }, mdx(Message, {\n    messageTitle: \"There is an update available.\",\n    mdxType: \"Message\"\n  }, mdx(Text, {\n    mdxType: \"Text\"\n  }, \"Hello, I am a simple info message.\"))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\",\n    \"metastring\": \"onlyCode\",\n    \"onlyCode\": true\n  }, \"import { Message } from '@marigold/components';\\n\")), mdx(FigmaLink, {\n    to: 'https://www.figma.com/file/DFKyTGHAoDxOsUBPszLLxP/%F0%9F%8F%B5%EF%B8%8FMarigold?node-id=582%3A119',\n    mdxType: \"FigmaLink\"\n  }), mdx(\"h2\", null, \"Description\"), mdx(\"p\", null, \"Message component to display a message with a title and icon based on a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"div\"), \" element and styled with a theme.\\nThe message component is used to capture the user atention to provide information. It is meant to show only very relevant information. The title should contain the most relevant information about the message.\\nThis component should not be added on a dynymic way.\"), mdx(\"h2\", null, \"Props\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": \"left\"\n  }, \"Property\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": \"left\"\n  }, \"Type\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": \"left\"\n  }, \"Default\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"left\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"messageTitle\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"left\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"string\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"left\"\n  })), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"left\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"variant\"), \" (optional)\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"left\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"string\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"left\"\n  })), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"left\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"size\"), \" (optional)\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"left\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"string\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"left\"\n  })))), mdx(\"h2\", null, \"Types\"), mdx(\"h3\", null, \"Info Message\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"<Message messageTitle=\\\"There is an update available.\\\">\\n  <Text>Hello, I am a simple info message.</Text>\\n</Message>\\n\")), mdx(\"h3\", null, \"Warning Message\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"<Message variant=\\\"warning\\\" messageTitle=\\\"Danger Zone!\\\">\\n  <Text>Hello, I am a simple warning message.</Text>\\n</Message>\\n\")), mdx(\"h3\", null, \"Error Message\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"<Message variant=\\\"error\\\" messageTitle=\\\"Wrong here.\\\">\\n  <Text>Hello, I am a simple error message.</Text>\\n</Message>\\n\")), mdx(\"h2\", null, \"Usage\"), mdx(\"h2\", null, \"Dos & Don'ts\"), mdx(Stack, {\n    space: \"small\",\n    mdxType: \"Stack\"\n  }, mdx(Box, {\n    display: \"grid\",\n    css: {\n      gridGap: 'small',\n      gridTemplateColumns: 'repeat(auto-fit, minmax(min(500px, 100%), 1fr))'\n    },\n    mdxType: \"Box\"\n  }, mdx(DoAndDont, {\n    preview: mdx(Stack, {\n      space: \"small\",\n      mdxType: \"Stack\"\n    }, mdx(Message, {\n      messageTitle: \"Info Message\",\n      variant: \"info\",\n      mdxType: \"Message\"\n    }, \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec sem eros, pharetra vel mauris rutrum, auctor consequat lectus. Sed euismod lorem sit amet mauris tempor lacinia.\"), mdx(Text, {\n      mdxType: \"Text\"\n    }, \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec sem eros, pharetra vel mauris rutrum, auctor consequat lectus. Sed euismod lorem sit amet mauris tempor lacinia. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec sem eros, pharetra vel mauris rutrum, auctor consequat lectus. Sed euismod lorem sit amet mauris tempor lacinia.\", ' ')),\n    mdxType: \"DoAndDont\"\n  }, \"Use the Message Component inline as in the example. Do not use it as a Dynamic component.\"), mdx(DoAndDont, {\n    dont: true,\n    preview: mdx(Message, {\n      messageTitle: \"Info Message\",\n      variant: \"info\",\n      mdxType: \"Message\"\n    }, \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur volutpat a turpis sed fringilla. Aenean suscipit et ligula ac ultricies. Aliquam rutrum facilisis dui quis eleifend. Maecenas finibus dapibus lobortis. Cras dictum viverra augue. Sed bibendum vel est eget cursus. Nullam quis eros efficitur, sollicitudin odio vitae, congue nulla. Aliquam lobortis, dui at porttitor malesuada, nisl leo tempor leo, eget cursus risus ligula non nunc. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur volutpat a turpis sed fringilla. Aenean suscipit et ligula ac ultricies. Aliquam rutrum facilisis dui quis eleifend. Maecenas finibus dapibus lobortis. Cras dictum viverra augue. Sed bibendum vel est eget cursus. Nullam quis eros efficitur, sollicitudin odio vitae, congue nulla. Aliquam lobortis, dui at porttitor malesuada, nisl leo tempor leo, eget cursus risus ligula non nunc.\"),\n    mdxType: \"DoAndDont\"\n  }, \"Do not write very long explanations on an info message. Use it to write only concrete messages in a clear and short way (3 to 4 lines maximum).\"))));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"Message"},"headings":[{"value":"Message"}]}},"pageContext":{"id":"bc1e206f-f707-51bb-bc79-4f776e50238f","slug":"components/message","__params":{"slug":"components"}}},
    "staticQueryHashes": ["2300692853","3402178641"]}