{
    "componentChunkName": "component---src-pages-mdx-slug-tsx",
    "path": "/components/menu/",
    "result": {"data":{"mdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Menu\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Menu\"), mdx(\"p\", null, \"With the Menu component you can add a Menu Button with Text or Icon as Label and as children some MenuItem components.\\nThe structure of the Menu component is a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Menu.Trigger\"), \", a simple \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Button\"), \" component and the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Menu\"), \" with its children the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Menu.Item\"), \".\\nThe variant can be added with the variant prop.\\nThe \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Trigger\"), \"has also a prop for \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"disabled\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"<Menu.Trigger>\\n  <Button variant=\\\"menu\\\" size=\\\"small\\\">\\n    Choose Menu\\n  </Button>\\n  <Menu>\\n    <Menu.Item key=\\\"burger\\\">\\uD83C\\uDF54 Burger</Menu.Item>\\n    <Menu.Item key=\\\"pizza\\\">\\uD83C\\uDF55 Pizza</Menu.Item>\\n    <Menu.Item key=\\\"salad\\\">\\uD83E\\uDD57 Salad</Menu.Item>\\n    <Menu.Item key=\\\"fries\\\">\\uD83C\\uDF5F Fries</Menu.Item>\\n  </Menu>\\n</Menu.Trigger>\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\",\n    \"metastring\": \"onlyCode\",\n    \"onlyCode\": true\n  }, \"import { Menu } from '@marigold/components';\\n\")), mdx(\"h2\", null, \"Props\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": \"left\"\n  }, \"Property\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": \"left\"\n  }, \"Type\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": \"left\"\n  }, \"Default\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"left\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"variant\"), \" (optional)\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"left\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"string\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"left\"\n  })), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"left\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"size\"), \" (optional)\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"left\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"string\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"left\"\n  })), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"left\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"disabled\"), \" (only for Trigger)\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"left\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"boolean\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"left\"\n  })))), mdx(\"h2\", null, \"Examples\"), mdx(\"h3\", null, \"Simple Menu\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"() => {\\n  const [selected, setSelected] = React.useState('');\\n  return (\\n    <>\\n      <Menu.Trigger>\\n        <Button variant=\\\"menu\\\" size=\\\"small\\\">\\n          Choose Menu\\n        </Button>\\n        <Menu onSelect={setSelected}>\\n          <Menu.Item key=\\\"burger\\\">\\uD83C\\uDF54 Burger</Menu.Item>\\n          <Menu.Item key=\\\"pizza\\\">\\uD83C\\uDF55 Pizza</Menu.Item>\\n          <Menu.Item key=\\\"salad\\\">\\uD83E\\uDD57 Salad</Menu.Item>\\n          <Menu.Item key=\\\"fries\\\">\\uD83C\\uDF5F Fries</Menu.Item>\\n        </Menu>\\n      </Menu.Trigger>\\n      <hr />\\n      <Text>selected: {selected}</Text>\\n    </>\\n  );\\n};\\n\")), mdx(\"h3\", null, \"Disabled Menu\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"() => {\\n  const [selected, setSelected] = React.useState('');\\n  return (\\n    <>\\n      <Menu.Trigger disabled>\\n        <Button variant=\\\"menu\\\" size=\\\"small\\\">\\n          Choose Menu\\n        </Button>\\n        <Menu onSelect={setSelected}>\\n          <Menu.Item key=\\\"burger\\\">\\uD83C\\uDF54 Burger</Menu.Item>\\n          <Menu.Item key=\\\"pizza\\\">\\uD83C\\uDF55 Pizza</Menu.Item>\\n          <Menu.Item key=\\\"salad\\\">\\uD83E\\uDD57 Salad</Menu.Item>\\n          <Menu.Item key=\\\"fries\\\">\\uD83C\\uDF5F Fries</Menu.Item>\\n        </Menu>\\n      </Menu.Trigger>\\n    </>\\n  );\\n};\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"Menu"},"headings":[{"value":"Menu"}]}},"pageContext":{"id":"e27fb436-7516-54ed-bbea-e0fda56b3906","slug":"components/menu","__params":{"slug":"components"}}},
    "staticQueryHashes": ["2300692853","3402178641"]}