(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[9091],{4434:function(n,e,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/components/button",function(){return t(6254)}])},6254:function(n,e,t){"use strict";t.r(e),t.d(e,{__N_SSG:function(){return s},title:function(){return i}});var o=t(5250),r=t(7160),s=!0,i="Button";function a(n){var e=Object.assign({p:"p",code:"code",h2:"h2",a:"a",h3:"h3",pre:"pre"},(0,r.ah)(),n.components),t=e.Toc,s=e.Preview,a=e.ButtonVariantDemo,c=e.AppearanceTable,d=e.PropsTable,h=e.PrimaryButtons,u=e.SecondaryButtons,p=e.GhostButtons,m=e.TextOnlyButtons,x=e.ButtonIconDemo,j=e.ButtonSizeDemo;return c||l("AppearanceTable",!0),x||l("ButtonIconDemo",!0),j||l("ButtonSizeDemo",!0),a||l("ButtonVariantDemo",!0),p||l("GhostButtons",!0),s||l("Preview",!0),h||l("PrimaryButtons",!0),d||l("PropsTable",!0),u||l("SecondaryButtons",!0),m||l("TextOnlyButtons",!0),t||l("Toc",!0),(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t,{selector:"#toc",items:'[{"anchor":"#usage","title":"Usage"},{"anchor":"#import","title":"Import"},{"anchor":"#appearance","title":"Appearance"},{"anchor":"#props","title":"Props"},{"anchor":"#examples","title":"Examples"},{"anchor":"#primary-button","title":"Primary Button"},{"anchor":"#secondary-button","title":"Secondary Button"},{"anchor":"#ghost-button","title":"Ghost Button"},{"anchor":"#suplementary-text-button","title":"Suplementary Text Button"},{"anchor":"#button-with-icon","title":"Button with Icon"},{"anchor":"#button-sizes","title":"Button Sizes"}]'}),"\n",(0,o.jsxs)(e.p,{children:["The ",(0,o.jsx)(e.code,{children:"<Button>"})," is a common form component, that renders a button element, which allows users to perform an action.\nThey have multiple styles for various needs, and are ideal for calling attention to where a user needs to do something in order to move forward in a flow."]}),"\n",(0,o.jsxs)(e.p,{children:["The variant and size of the ",(0,o.jsx)(e.code,{children:"<Button>"})," can be added with the ",(0,o.jsx)(e.code,{children:"variant"})," prop. Variants are ",(0,o.jsx)(e.code,{children:"primary"}),", ",(0,o.jsx)(e.code,{children:"secondary"}),", ",(0,o.jsx)(e.code,{children:"ghost"})," and ",(0,o.jsx)(e.code,{children:"text"}),". You can also set the ",(0,o.jsx)(e.code,{children:"size"}),", currently there is just one size available."]}),"\n",(0,o.jsx)(s,{children:(0,o.jsx)(a,{})}),"\n",(0,o.jsx)(e.h2,{id:"usage",children:(0,o.jsx)(e.a,{href:"#usage",children:"Usage"})}),"\n",(0,o.jsx)(e.h3,{id:"import",children:(0,o.jsx)(e.a,{href:"#import",children:"Import"})}),"\n",(0,o.jsx)(e.p,{children:"To import the component you just have to use this code below."}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-tsx",children:"import { Button } from '@marigold/components';\n"})}),"\n",(0,o.jsx)(e.h3,{id:"appearance",children:(0,o.jsx)(e.a,{href:"#appearance",children:"Appearance"})}),"\n",(0,o.jsx)(c,{component:i}),"\n",(0,o.jsx)(e.h3,{id:"props",children:(0,o.jsx)(e.a,{href:"#props",children:"Props"})}),"\n",(0,o.jsx)(d,{props:[{property:"space",type:"ResponsiveStyleValue<string>",description:"Spacing between child element.",default:"none"},{property:"onPress",type:"(e: PressEvent) => void",description:"Handler that is called when the press is released over the target.",default:"none"},{property:"disabled",type:"boolean",description:"Disables the button.",default:"false"},{property:"fullWidth",type:"boolean",description:"Stretches the button width with full available space.",default:"false"},{property:"...",type:"",description:"Yes you can use all regular attributes of button!",default:""}]}),"\n",(0,o.jsx)(e.h2,{id:"examples",children:(0,o.jsx)(e.a,{href:"#examples",children:"Examples"})}),"\n",(0,o.jsx)(e.h3,{id:"primary-button",children:(0,o.jsx)(e.a,{href:"#primary-button",children:"Primary Button"})}),"\n",(0,o.jsxs)(e.p,{children:["The function of the primary ",(0,o.jsx)(e.code,{children:"<Button>"})," is to achieve the most common or most important goal of the user, it has more visual weight than the secondary ",(0,o.jsx)(e.code,{children:"<Button>"}),". There should not be more than one primary ",(0,o.jsx)(e.code,{children:"<Button>"})," in a screen at the time."]}),"\n",(0,o.jsx)(s,{children:(0,o.jsx)(h,{})}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-tsx",children:'import { Inline, Button } from \'@marigold/components\';\n\nexport const PrimaryButtons = () => (\n  <Inline space="small">\n    <Button variant="primary">Primary</Button>\n    <Button variant="primary" disabled>\n      Primary\n    </Button>\n  </Inline>\n);\n'})}),"\n",(0,o.jsx)(e.h3,{id:"secondary-button",children:(0,o.jsx)(e.a,{href:"#secondary-button",children:"Secondary Button"})}),"\n",(0,o.jsxs)(e.p,{children:["The Secondary ",(0,o.jsx)(e.code,{children:"<Button>"})," is an alternative to the user to the primary ",(0,o.jsx)(e.code,{children:"<Button>"}),". They are used for actions like canceling, skipping, resetting, declining an offer etc."]}),"\n",(0,o.jsx)(s,{children:(0,o.jsx)(u,{})}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-tsx",children:'import { Inline, Button } from \'@marigold/components\';\n\nexport const SecondaryButtons = () => (\n  <Inline space="small">\n    <Button variant="secondary">Secondary</Button>\n    <Button variant="secondary" disabled>\n      Secondary\n    </Button>\n  </Inline>\n);\n'})}),"\n",(0,o.jsx)(e.h3,{id:"ghost-button",children:(0,o.jsx)(e.a,{href:"#ghost-button",children:"Ghost Button"})}),"\n",(0,o.jsxs)(e.p,{children:["Ghost ",(0,o.jsx)(e.code,{children:"<Button>"})," are used for miscellaneous actions, they are important but is not the ones where it is desired that the user focus at the moment."]}),"\n",(0,o.jsx)(s,{children:(0,o.jsx)(p,{})}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-tsx",children:'import { Inline, Button } from \'@marigold/components\';\n\nexport const GhostButtons = () => (\n  <Inline space="small">\n    <Button variant="ghost">Ghost</Button>\n    <Button variant="ghost" disabled>\n      Ghost\n    </Button>\n  </Inline>\n);\n'})}),"\n",(0,o.jsx)(e.h3,{id:"suplementary-text-button",children:(0,o.jsx)(e.a,{href:"#suplementary-text-button",children:"Suplementary Text Button"})}),"\n",(0,o.jsxs)(e.p,{children:["The only text ",(0,o.jsx)(e.code,{children:"<Button>"})," can be used in a similar way of a secondary ",(0,o.jsx)(e.code,{children:"<Button>"}),", but they are meant to be less relevant to the user. It is also a good way if you want a ",(0,o.jsx)(e.code,{children:"<Button>"})," that don't really look like one."]}),"\n",(0,o.jsx)(s,{children:(0,o.jsx)(m,{})}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-tsx",children:'import { Inline, Button } from \'@marigold/components\';\n\nexport const TextOnlyButtons = () => (\n  <Inline space="small">\n    <Button variant="text">Text Only</Button>\n    <Button variant="text" disabled>\n      Text Only\n    </Button>\n  </Inline>\n);\n'})}),"\n",(0,o.jsx)(e.h3,{id:"button-with-icon",children:(0,o.jsx)(e.a,{href:"#button-with-icon",children:"Button with Icon"})}),"\n",(0,o.jsxs)(e.p,{children:[(0,o.jsx)(e.a,{href:"/components/icon/",children:"Icons"})," can be added in order to make clear, what a ",(0,o.jsx)(e.code,{children:"<Button>"})," does. Buttons should not be made only with icons, because every user may understand them on a different way. If you want to have simple icon with a ",(0,o.jsx)(e.a,{href:"/components/tooltip/",children:(0,o.jsx)(e.code,{children:"<Tooltip>"})})," you can choose a ",(0,o.jsx)(e.code,{children:"<Button>"})," with an icon."]}),"\n",(0,o.jsx)(s,{children:(0,o.jsx)(x,{})}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-tsx",children:'import { Inline, Button } from \'@marigold/components\';\nimport { Ticket } from \'@marigold/icons\';\n\nexport const ButtonIconDemo = () => (\n  <Inline space="small">\n    <Button variant="primary">\n      <Ticket /> Icon Primary\n    </Button>\n    <Button variant="primary" disabled>\n      <Ticket /> Icon Primary\n    </Button>\n  </Inline>\n);\n'})}),"\n",(0,o.jsx)(e.h3,{id:"button-sizes",children:(0,o.jsx)(e.a,{href:"#button-sizes",children:"Button Sizes"})}),"\n",(0,o.jsxs)(e.p,{children:["If there are many actions in one page, is it possible to use small buttons instead of big ones. As well if the page is required to be open on mobile devices.\nAlso there is the ",(0,o.jsx)(e.code,{children:"fullWidth"})," property, with that one you can stretch the width of the ",(0,o.jsx)(e.code,{children:"<Button>"}),"."]}),"\n",(0,o.jsx)(s,{children:(0,o.jsx)(j,{})}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-tsx",children:'import { Inline, Button } from \'@marigold/components\';\n\nexport const ButtonSizeDemo = () => (\n  <Inline space="small">\n    <Button variant="primary" size="small">\n      small\n    </Button>\n    <Button variant="primary" size="small" fullWidth>\n      small\n    </Button>\n    <Button variant="primary" size="small" disabled>\n      small\n    </Button>\n  </Inline>\n);\n'})})]})}function l(n,e){throw new Error("Expected "+(e?"component":"object")+" `"+n+"` to be defined: you likely forgot to import, pass, or provide it.")}e.default=function(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},e=Object.assign({},(0,r.ah)(),n.components),t=e.wrapper;return t?(0,o.jsx)(t,Object.assign({},n,{children:(0,o.jsx)(a,n)})):a(n)}}},function(n){n.O(0,[9774,2888,179],(function(){return e=4434,n(n.s=e);var e}));var e=n.O();_N_E=e}]);