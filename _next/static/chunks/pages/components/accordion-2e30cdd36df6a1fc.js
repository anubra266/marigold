(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[9861],{8758:function(e,n,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/components/accordion",function(){return t(5764)}])},5764:function(e,n,t){"use strict";t.r(n),t.d(n,{__N_SSG:function(){return c},title:function(){return r}});var o=t(5250),i=t(7160),c=!0,r="Accordion";function s(e){var n=Object.assign({p:"p",code:"code",h2:"h2",a:"a",h3:"h3",pre:"pre"},(0,i.ah)(),e.components),t=n.Toc,c=n.Preview,s=n.BasicAccordion,a=n.AppearanceTable,d=n.PropsTable,p=n.ComplexSingleSelect,h=n.MultiSelect;return a||l("AppearanceTable",!0),s||l("BasicAccordion",!0),p||l("ComplexSingleSelect",!0),h||l("MultiSelect",!0),c||l("Preview",!0),d||l("PropsTable",!0),t||l("Toc",!0),(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t,{selector:"#toc",items:'[{"anchor":"#usage","title":"Usage"},{"anchor":"#import","title":"Import"},{"anchor":"#appearance","title":"Appearance"},{"anchor":"#props-accordion","title":"Props Accordion"},{"anchor":"#props-accordionitem","title":"Props Accordion.Item"},{"anchor":"#examples","title":"Examples"},{"anchor":"#singleselect-accordion","title":"Singleselect Accordion"},{"anchor":"#multiselect-accordion","title":"Multiselect Accordion"}]'}),"\n",(0,o.jsxs)(n.p,{children:["An ",(0,o.jsx)(n.code,{children:"<Accordion>"})," is a component that allows you to organizing content into collapsible sections. It consists of a series of vertically stacked items. Accordions are commonly used in website and application designs to present information in a compact and organized way, allowing users to focus on the specific information they are interested in without being overwhelmed by excessive content."]}),"\n",(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.code,{children:"<Accordion.Item>"})," can be expanded by default using the ",(0,o.jsx)(n.code,{children:"defaultExpandedKeys"})," property or collapsed.\nYou can also switch the ",(0,o.jsx)(n.code,{children:"selectionMode"})," for ",(0,o.jsx)(n.code,{children:"<Accordion>"})," by passing its property. The default behavior is set to single mode."]}),"\n",(0,o.jsx)(c,{children:(0,o.jsx)(s,{})}),"\n",(0,o.jsx)(n.h2,{id:"usage",children:(0,o.jsx)(n.a,{href:"#usage",children:"Usage"})}),"\n",(0,o.jsx)(n.h3,{id:"import",children:(0,o.jsx)(n.a,{href:"#import",children:"Import"})}),"\n",(0,o.jsx)(n.p,{children:"To import the component you just have to use this code below."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:"import { Accordion } from '@marigold/components';\n"})}),"\n",(0,o.jsx)(n.h3,{id:"appearance",children:(0,o.jsx)(n.a,{href:"#appearance",children:"Appearance"})}),"\n",(0,o.jsx)(a,{component:r}),"\n",(0,o.jsx)(n.h3,{id:"props-accordion",children:(0,o.jsx)(n.a,{href:"#props-accordion",children:"Props Accordion"})}),"\n",(0,o.jsx)(d,{props:[{property:"defaultExpandedKeys",type:"Iterable<Key>",description:"The initial expanded keys in the collection (uncontrolled).",default:"none"},{property:"selectionMode",type:"none, single, multiple",description:"Sets the mode of items open at the same time. ",default:"single"},{property:"children",type:"ItemElement<object>[] | ItemElement<object>",description:"Children of the Accordion.",default:"none"},{property:"items",type:"Iterable<object>",description:"Item objects in the collection.",default:"none"}]}),"\n",(0,o.jsx)(n.h3,{id:"props-accordionitem",children:(0,o.jsx)(n.a,{href:"#props-accordionitem",children:"Props Accordion.Item"})}),"\n",(0,o.jsx)(d,{props:[{property:"key",type:"React.Key",description:"The key of the item.",default:"none"},{property:"title",type:"string | ReactElement",description:"Sets title of the accordion item which will be displayed to the button. ",default:"none"},{property:"textValue",type:"string",description:"Add a textValue if you use JSX-Elements for the title to supported accessibility.",default:"true"}]}),"\n",(0,o.jsx)(n.h2,{id:"examples",children:(0,o.jsx)(n.a,{href:"#examples",children:"Examples"})}),"\n",(0,o.jsx)(n.h3,{id:"singleselect-accordion",children:(0,o.jsx)(n.a,{href:"#singleselect-accordion",children:"Singleselect Accordion"})}),"\n",(0,o.jsxs)(n.p,{children:["This component shows how a single selection ",(0,o.jsx)(n.code,{children:"<Accordion>"})," is working. It is possible to have just one item open and the other ones hidden. You can also see that the items are fullwidth, which is true by default. Notice that you can't expand two or more items per default."]}),"\n",(0,o.jsx)(c,{children:(0,o.jsx)(p,{})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:'import { Accordion, Text, TextField } from \'@marigold/components\';\n\nexport const ComplexSingleSelect = () => {\n  return (\n    <Accordion defaultExpandedKeys={[1]}>\n      <Accordion.Item key={1} title="Some Imformations">\n        <TextField label="Name" />\n      </Accordion.Item>\n      <Accordion.Item key={2} title="Personal Settings">\n        <Text>Here is some useful text with some settings to choose</Text>\n      </Accordion.Item>\n      <Accordion.Item key={3} title="Billing Adress">\n        <Text>Some more informations</Text>\n      </Accordion.Item>\n    </Accordion>\n  );\n};\n'})}),"\n",(0,o.jsx)(n.h3,{id:"multiselect-accordion",children:(0,o.jsx)(n.a,{href:"#multiselect-accordion",children:"Multiselect Accordion"})}),"\n",(0,o.jsx)(n.p,{children:"With the multiselection mode you can collapse and hide the items as you want. For sure you can set one or more defaultExpandedKeys."}),"\n",(0,o.jsx)(c,{children:(0,o.jsx)(h,{})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:'import {\n  Accordion,\n  Inline,\n  Text,\n  TextField,\n  NumberField,\n  Stack,\n} from \'@marigold/components\';\nimport { Parking, SettingDots, Accessible } from \'@marigold/icons\';\n\nexport const MultiSelect = () => {\n  const items = [\n    {\n      key: \'one\',\n      textValue: \'Parking passes\',\n      title: (\n        <Inline space="medium">\n          <Parking />\n          <Text fontStyle="bold">Parking passes</Text>\n        </Inline>\n      ),\n      children: (\n        <Stack space="medium">\n          <TextField\n            label="Parking Slots"\n            description="Available parking passes"\n          />\n          <NumberField\n            label="Costs"\n            description="Amount in euros"\n            defaultValue={5}\n            formatOptions={{\n              style: \'currency\',\n              currency: \'EUR\',\n            }}\n          />\n        </Stack>\n      ),\n    },\n    {\n      key: \'two\',\n      textValue: \'Handicapped parking spaces\',\n      title: (\n        <Inline space="medium">\n          <Accessible />\n          <Text fontStyle="bold">Handicapped parking spaces</Text>\n        </Inline>\n      ),\n      children: (\n        <Stack space="medium">\n          <TextField\n            label="Parking Slots"\n            description="Available parking passes"\n          />\n          <NumberField\n            label="Costs"\n            description="Amount in euros"\n            defaultValue={5}\n            formatOptions={{\n              style: \'currency\',\n              currency: \'EUR\',\n            }}\n          />\n        </Stack>\n      ),\n    },\n    {\n      key: \'tree\',\n      textValue: \'Settings\',\n      title: (\n        <Inline space="medium">\n          <SettingDots />\n          <Text fontStyle="bold">Settings</Text>\n        </Inline>\n      ),\n      children: (\n        <TextField\n          label="Parking Stations"\n          description="Available parking stations"\n        />\n      ),\n    },\n  ];\n\n  return (\n    <Accordion selectionMode="multiple" defaultExpandedKeys={[\'two\']}>\n      {items.map(item => (\n        <Accordion.Item\n          key={item.key}\n          title={item.title}\n          textValue={item.textValue}\n        >\n          {item.children}\n        </Accordion.Item>\n      ))}\n    </Accordion>\n  );\n};\n'})})]})}function l(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}n.default=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=Object.assign({},(0,i.ah)(),e.components),t=n.wrapper;return t?(0,o.jsx)(t,Object.assign({},e,{children:(0,o.jsx)(s,e)})):s(e)}}},function(e){e.O(0,[9774,2888,179],(function(){return n=8758,e(e.s=n);var n}));var n=e.O();_N_E=n}]);