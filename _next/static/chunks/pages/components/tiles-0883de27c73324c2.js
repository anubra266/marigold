(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[9389],{1616:function(e,n,i){(window.__NEXT_P=window.__NEXT_P||[]).push(["/components/tiles",function(){return i(9461)}])},9461:function(e,n,i){"use strict";i.r(n),i.d(n,{__N_SSG:function(){return l},title:function(){return d}});var s=i(5250),t=i(8570),l=!0,d="Tiles";function a(e){var n=Object.assign({p:"p",code:"code",a:"a",h2:"h2",h3:"h3",pre:"pre"},(0,t.ah)(),e.components),i=n.Toc,l=n.Preview,d=n.Tiles,a=n.Box,o=n.PropsTable,h=n.SpacingTiles,c=n.ItemWidthTiles,p=n.AutoRows,x=n.StretchTiles,g=n.ComplexTiles;return p||r("AutoRows",!0),a||r("Box",!0),g||r("ComplexTiles",!0),c||r("ItemWidthTiles",!0),l||r("Preview",!0),o||r("PropsTable",!0),h||r("SpacingTiles",!0),x||r("StretchTiles",!0),d||r("Tiles",!0),i||r("Toc",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(i,{selector:"#toc",items:'[{"anchor":"#usage","title":"Usage"},{"anchor":"#import","title":"Import"},{"anchor":"#props","title":"Props"},{"anchor":"#examples","title":"Examples"},{"anchor":"#spacing-tiles","title":"Spacing Tiles"},{"anchor":"#tiles-with-tileswidth","title":"Tiles with tilesWidth"},{"anchor":"#tiles-with-equal-heights","title":"Tiles with equal Heights"},{"anchor":"#tiles-with-and-without-stretch","title":"Tiles with and without stretch"},{"anchor":"#complexe-tiles-with-boxes-and-stacks","title":"Complexe Tiles with Boxes and Stacks"}]'}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"<Tiles>"})," component is related to the CSS grid context. Use the ",(0,s.jsx)(n.code,{children:"<Tiles>"})," if you want to layout some items in a responsive way."]}),"\n",(0,s.jsxs)(n.p,{children:["It should be noted that ",(0,s.jsx)(n.code,{children:"<Tiles>"})," is used for children with the same width. If you want to set different widths for the children use ",(0,s.jsx)(n.a,{href:"/components/columns/",children:(0,s.jsx)(n.code,{children:"<Columns>"})})," instead."]}),"\n",(0,s.jsxs)(n.p,{children:["It's possible to display the children elements with some spacing or set a minimum width for all items inside ",(0,s.jsx)(n.code,{children:"<Tiles>"}),"."]}),"\n",(0,s.jsx)(l,{children:(0,s.jsxs)(d,{space:"small",tilesWidth:"200px",children:[(0,s.jsx)(a,{css:{border:"1px solid #ced4da",bg:"#e9ecef",height:"100px"}}),(0,s.jsx)(a,{css:{border:"1px solid #ced4da",bg:"#e9ecef",height:"100px"}}),(0,s.jsx)(a,{css:{border:"1px solid #ced4da",bg:"#e9ecef",height:"100px"}}),(0,s.jsx)(a,{css:{border:"1px solid #ced4da",bg:"#e9ecef",height:"100px"}}),(0,s.jsx)(a,{css:{border:"1px solid #ced4da",bg:"#e9ecef",height:"100px"}}),(0,s.jsx)(a,{css:{border:"1px solid #ced4da",bg:"#e9ecef",height:"100px"}})]})}),"\n",(0,s.jsx)(n.h2,{id:"usage",children:(0,s.jsx)(n.a,{href:"#usage",children:"Usage"})}),"\n",(0,s.jsx)(n.h3,{id:"import",children:(0,s.jsx)(n.a,{href:"#import",children:"Import"})}),"\n",(0,s.jsx)(n.p,{children:"To import the component you just have to use this code below."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"import { Tiles } from '@marigold/components';\n"})}),"\n",(0,s.jsx)(n.h3,{id:"props",children:(0,s.jsx)(n.a,{href:"#props",children:"Props"})}),"\n",(0,s.jsx)(o,{props:[{property:"space",type:"ResponsiveStyleValue<string>",description:"Set space between items",default:"none"},{property:"tilesWidth",type:"ResponsiveStyleValue<string>",description:"Set minimum width for all items inside",default:"250px"},{property:"equalHeight",type:"boolean",description:"If you set equalHeight, all items will have the size of the biggest item",default:"false"},{property:"stretch",type:"boolean",description:'Tiles will take stretch to available width and will distribute their width equally. Note that this can make them wider than the specified tiles width, but not smaller than the given "itemWidth". Basically this is full responsive mode.',default:"false"}]}),"\n",(0,s.jsx)(n.h2,{id:"examples",children:(0,s.jsx)(n.a,{href:"#examples",children:"Examples"})}),"\n",(0,s.jsx)(n.h3,{id:"spacing-tiles",children:(0,s.jsx)(n.a,{href:"#spacing-tiles",children:"Spacing Tiles"})}),"\n",(0,s.jsxs)(n.p,{children:["An example on how to use the ",(0,s.jsx)(n.code,{children:"space"})," prop. The default is none. You can set it to any value."]}),"\n",(0,s.jsx)(l,{children:(0,s.jsx)(h,{})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"import { Box, Tiles } from '@marigold/components';\n\nexport const SpacingTiles = () => (\n  <Tiles tilesWidth=\"large\" space=\"large\">\n    <Box\n      css={{\n        border: '1px solid #ced4da',\n        bg: '#e9ecef',\n        height: '100px',\n      }}\n    />\n    <Box\n      css={{\n        border: '1px solid #ced4da',\n        bg: '#e9ecef',\n        height: '100px',\n      }}\n    />\n    <Box\n      css={{\n        border: '1px solid #ced4da',\n        bg: '#e9ecef',\n        height: '100px',\n      }}\n    />\n    <Box\n      css={{\n        border: '1px solid #ced4da',\n        bg: '#e9ecef',\n        height: '100px',\n      }}\n    />\n  </Tiles>\n);\n"})}),"\n",(0,s.jsx)(n.h3,{id:"tiles-with-tileswidth",children:(0,s.jsx)(n.a,{href:"#tiles-with-tileswidth",children:"Tiles with tilesWidth"})}),"\n",(0,s.jsxs)(n.p,{children:["This Example shows how to use the ",(0,s.jsx)(n.code,{children:"tilesWidth"})," property on ",(0,s.jsx)(n.code,{children:"<Tiles>"}),"."]}),"\n",(0,s.jsx)(l,{children:(0,s.jsx)(c,{})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:'import { Card, Image, Tiles } from \'@marigold/components\';\n\nexport const ItemWidthTiles = () => (\n  <Tiles space="xsmall" tilesWidth="200px" stretch>\n    <Card>\n      <Image\n        src="https://www.pokewiki.de/images/6/63/Sugimori_004.png"\n        alt="glumanda"\n        width={100}\n        height={100}\n      />\n    </Card>\n    <Card>\n      <Image\n        src="https://www.pokewiki.de/images/9/96/Sugimori_001.png"\n        alt="bisasam"\n        width={100}\n        height={100}\n      />\n    </Card>\n    <Card>\n      <Image\n        src="https://www.pokewiki.de/images/6/6c/Sugimori_025.png"\n        alt="pikachu"\n        width={100}\n        height={100}\n      />\n    </Card>\n    <Card>\n      <Image\n        src="https://www.pokewiki.de/images/2/26/Sugimori_037.png"\n        alt="vulpix"\n        width={100}\n        height={100}\n      />\n    </Card>\n  </Tiles>\n);\n'})}),"\n",(0,s.jsx)(n.h3,{id:"tiles-with-equal-heights",children:(0,s.jsx)(n.a,{href:"#tiles-with-equal-heights",children:"Tiles with equal Heights"})}),"\n",(0,s.jsxs)(n.p,{children:["The Example shows how to use the ",(0,s.jsx)(n.code,{children:"equalHeight"})," property, which is a boolean that can be used to size the items of the ",(0,s.jsx)(n.code,{children:"<Tiles>"}),". You can see that all items have the size of the large Pikachu card. It is necessary if you want all items in the largest size of a child."]}),"\n",(0,s.jsx)(l,{children:(0,s.jsx)(p,{})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:'import { Box, Card, Image, Tiles, Text } from \'@marigold/components\';\n\nexport const AutoRows = () => (\n  <Tiles space="xsmall" tilesWidth="250px" equalHeight>\n    <Box as={Card}>\n      <Image\n        src="https://www.pokewiki.de/images/6/63/Sugimori_004.png"\n        alt="glumanda"\n        width={100}\n        height={100}\n      />\n    </Box>\n    <Box as={Card}>\n      <Image\n        src="https://www.pokewiki.de/images/9/96/Sugimori_001.png"\n        alt="bisasam"\n        width={100}\n        height={100}\n      />\n    </Box>\n    <Box as={Card}>\n      <Image\n        src="https://www.pokewiki.de/images/6/6c/Sugimori_025.png"\n        alt="pikachu"\n        width={100}\n        height={100}\n      />\n      <Text>\n        Pikachu ist ein Pok\xe9mon mit dem Typ Elektro und existiert seit der\n        ersten Spielgeneration. Es ist die erste Entwicklung von Pichu und kann\n        sich selbst zu Raichu weiterentwickeln.\n      </Text>\n    </Box>\n    <Box as={Card}>\n      <Image\n        src="https://www.pokewiki.de/images/2/26/Sugimori_037.png"\n        alt="vulpix"\n        width={100}\n        height={100}\n      />\n    </Box>\n  </Tiles>\n);\n'})}),"\n",(0,s.jsx)(n.h3,{id:"tiles-with-and-without-stretch",children:(0,s.jsx)(n.a,{href:"#tiles-with-and-without-stretch",children:"Tiles with and without stretch"})}),"\n",(0,s.jsxs)(n.p,{children:["Using the ",(0,s.jsx)(n.code,{children:"stretch"})," property will make the tiles fully responsive. Meaning, they will distribute available width between them while not getting smaller then the given ",(0,s.jsx)(n.code,{children:"tilesWidth"}),","]}),"\n",(0,s.jsx)(l,{children:(0,s.jsx)(x,{})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"import { Box, Divider, Headline, Stack, Tiles } from '@marigold/components';\n\nexport const StretchTiles = () => (\n  <Stack space=\"large\">\n    <Headline>Without stretch:</Headline>\n    <Tiles tilesWidth=\"150px\" space=\"large\">\n      <Box\n        css={{\n          border: '1px solid #ced4da',\n          bg: '#e9ecef',\n          height: '100px',\n        }}\n      />\n      <Box\n        css={{\n          border: '1px solid #ced4da',\n          bg: '#e9ecef',\n          height: '100px',\n        }}\n      />\n      <Box\n        css={{\n          border: '1px solid #ced4da',\n          bg: '#e9ecef',\n          height: '100px',\n        }}\n      />\n      <Box\n        css={{\n          border: '1px solid #ced4da',\n          bg: '#e9ecef',\n          height: '100px',\n        }}\n      />\n      <Box\n        css={{\n          border: '1px solid #ced4da',\n          bg: '#e9ecef',\n          height: '100px',\n        }}\n      />\n    </Tiles>\n    <Divider />\n    <Tiles tilesWidth=\"150px\" space=\"large\">\n      <Box\n        css={{\n          border: '1px solid #ced4da',\n          bg: '#e9ecef',\n          height: '100px',\n        }}\n      />\n      <Box\n        css={{\n          border: '1px solid #ced4da',\n          bg: '#e9ecef',\n          height: '100px',\n        }}\n      />\n    </Tiles>\n    <Headline>With stretch:</Headline>\n    <Tiles tilesWidth=\"150px\" space=\"large\" stretch>\n      <Box\n        css={{\n          border: '1px solid #ced4da',\n          bg: '#e9ecef',\n          height: '100px',\n        }}\n      />\n      <Box\n        css={{\n          border: '1px solid #ced4da',\n          bg: '#e9ecef',\n          height: '100px',\n        }}\n      />\n      <Box\n        css={{\n          border: '1px solid #ced4da',\n          bg: '#e9ecef',\n          height: '100px',\n        }}\n      />\n      <Box\n        css={{\n          border: '1px solid #ced4da',\n          bg: '#e9ecef',\n          height: '100px',\n        }}\n      />\n      <Box\n        css={{\n          border: '1px solid #ced4da',\n          bg: '#e9ecef',\n          height: '100px',\n        }}\n      />\n    </Tiles>\n    <Divider />\n    <Tiles tilesWidth=\"150px\" space=\"large\" stretch>\n      <Box\n        css={{\n          border: '1px solid #ced4da',\n          bg: '#e9ecef',\n          height: '100px',\n        }}\n      />\n      <Box\n        css={{\n          border: '1px solid #ced4da',\n          bg: '#e9ecef',\n          height: '100px',\n        }}\n      />\n    </Tiles>\n  </Stack>\n);\n"})}),"\n",(0,s.jsx)(n.h3,{id:"complexe-tiles-with-boxes-and-stacks",children:(0,s.jsx)(n.a,{href:"#complexe-tiles-with-boxes-and-stacks",children:"Complexe Tiles with Boxes and Stacks"})}),"\n",(0,s.jsxs)(n.p,{children:["A full example of a use case with ",(0,s.jsx)(n.code,{children:"<Tiles>"})," and ",(0,s.jsx)(n.code,{children:"<Card>"})," inside it."]}),"\n",(0,s.jsx)(l,{children:(0,s.jsx)(g,{})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:'import {\n  Image,\n  Headline,\n  Stack,\n  Text,\n  Tiles,\n  Card,\n} from \'@marigold/components\';\n\nexport const ComplexTiles = () => (\n  <Tiles tilesWidth="300px" space="small">\n    <Card p="small">\n      <Stack space="medium" alignX="center">\n        <Image\n          src="https://www.pokewiki.de/images/6/63/Sugimori_004.png"\n          alt="glumanda"\n          width={200}\n          height={200}\n        />\n        <Headline level="4">Glumanda</Headline>\n        <Text>\n          Glumanda ist ein Pok\xe9mon mit dem Typ Feuer und existiert seit der\n          ersten Spielgeneration. Es ist neben Bisasam und Schiggy eines der\n          Starter-Pok\xe9mon in Pok\xe9mon Rot, Blau, Feuerrot und Blattgr\xfcn.\n        </Text>\n      </Stack>\n    </Card>\n    <Card p="small">\n      <Stack space="medium" alignX="center">\n        <Image\n          src="https://www.pokewiki.de/images/7/7a/Sugimori_005.png"\n          alt="glutexo"\n          width={200}\n          height={200}\n        />\n        <Headline level="4">Glutexo</Headline>\n        <Text>\n          Glutexo ist ein Pok\xe9mon mit dem Typ Feuer und existiert seit der\n          ersten Spielgeneration. Als erste Weiterentwicklung von Glumanda\n          spielt es eine wichtige Rolle als Starter-Pok\xe9mon in Pok\xe9mon Rot,\n          Blau, Feuerrot, Blattgr\xfcn.\n        </Text>\n      </Stack>\n    </Card>\n    <Card p="small">\n      <Stack space="medium" alignX="center">\n        <Image\n          src="https://www.pokewiki.de/images/9/96/Sugimori_006.png"\n          alt="glurak"\n          width={250}\n          height={200}\n        />\n        <Headline level="4">Glurak</Headline>\n        <Text>\n          Glurak ist ein Pok\xe9mon mit den Typen Feuer und Flug und existiert seit\n          der ersten Spielgeneration. Es stellt die zweite Entwicklungsstufe von\n          Glumanda und Glutexo dar und ist somit neben Bisaflor und Turtok eine\n          der Endentwicklungen der Starter-Pok\xe9mon aus Kanto.\n        </Text>\n      </Stack>\n    </Card>\n  </Tiles>\n);\n'})})]})}function r(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}n.default=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=Object.assign({},(0,t.ah)(),e.components),i=n.wrapper;return i?(0,s.jsx)(i,Object.assign({},e,{children:(0,s.jsx)(a,e)})):a(e)}}},function(e){e.O(0,[9774,2888,179],(function(){return n=1616,e(e.s=n);var n}));var n=e.O();_N_E=n}]);