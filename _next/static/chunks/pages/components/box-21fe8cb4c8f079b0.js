(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[1045],{968:function(e,n,o){(window.__NEXT_P=window.__NEXT_P||[]).push(["/components/box",function(){return o(1209)}])},1209:function(e,n,o){"use strict";o.r(n),o.d(n,{__N_SSG:function(){return r},title:function(){return i}});var s=o(5250),t=o(8570),r=!0,i="Box";function a(e){var n=Object.assign({p:"p",code:"code",a:"a",h2:"h2",h3:"h3",pre:"pre"},(0,t.ah)(),e.components),o=n.Toc,r=n.Preview,i=n.Box,a=n.PropsTable,p=n.SuccessBox,l=n.ButtonBox,x=n.TextBox;return i||c("Box",!0),l||c("ButtonBox",!0),r||c("Preview",!0),a||c("PropsTable",!0),p||c("SuccessBox",!0),x||c("TextBox",!0),o||c("Toc",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(o,{selector:"#toc",items:'[{"anchor":"#usage","title":"Usage"},{"anchor":"#import","title":"Import"},{"anchor":"#props","title":"Props"},{"anchor":"#examples","title":"Examples"},{"anchor":"#basic-box","title":"Basic Box"},{"anchor":"#box-as-button","title":"Box as Button"},{"anchor":"#box-with-several-props","title":"Box with several props"}]'}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"<Box>"})," is a basic component like the HTML div element. You can modify the component with different style props. It is also possible to write ",(0,s.jsx)(n.code,{children:"__baseCSS"})," and ",(0,s.jsx)(n.code,{children:"css"})," styles on the ",(0,s.jsx)(n.code,{children:"<Box>"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["You can use the ",(0,s.jsx)(n.code,{children:"as"})," prop to let the ",(0,s.jsx)(n.code,{children:"<Box>"})," behave as any Marigold component or HTML Element with all its properties."]}),"\n",(0,s.jsxs)(n.p,{children:["For a more detailed description, see ",(0,s.jsx)(n.a,{href:"../../foundation/box-primitive",children:"Box Primitive"}),"."]}),"\n",(0,s.jsx)(r,{children:(0,s.jsx)(i,{border:"1px solid gray",p:"small",borderRadius:"5px",children:(0,s.jsx)(n.p,{children:"I am basic div box!"})})}),"\n",(0,s.jsx)(n.h2,{id:"usage",children:(0,s.jsx)(n.a,{href:"#usage",children:"Usage"})}),"\n",(0,s.jsx)(n.h3,{id:"import",children:(0,s.jsx)(n.a,{href:"#import",children:"Import"})}),"\n",(0,s.jsx)(n.p,{children:"To import the component you just have to use this code below."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"import { Box } from '@marigold/components';\n"})}),"\n",(0,s.jsx)(n.h3,{id:"props",children:(0,s.jsx)(n.a,{href:"#props",children:"Props"})}),"\n",(0,s.jsx)(a,{props:[{property:"as",type:"HTMLElement | MarigoldComponent",description:"Behaves like a HTMLElement or a Marigold component if used.",default:"div"},{property:"variant",type:"string\u23aestring[]",description:"The variant of the component.",default:"none"},{property:"__baseCSS",type:"CSSObject",description:"Style the base CSS.",default:"none"},{property:"css",type:"CSSObject | CSSObject",description:"Set CSS for the component.",default:""}]}),"\n",(0,s.jsx)(n.h2,{id:"examples",children:(0,s.jsx)(n.a,{href:"#examples",children:"Examples"})}),"\n",(0,s.jsx)(n.h3,{id:"basic-box",children:(0,s.jsx)(n.a,{href:"#basic-box",children:"Basic Box"})}),"\n",(0,s.jsxs)(n.p,{children:["In this example the ",(0,s.jsx)(n.code,{children:"<Box>"})," is modified with several props."]}),"\n",(0,s.jsx)(r,{children:(0,s.jsx)(p,{})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"import { Box, Text } from '@marigold/components';\n\nexport const SuccessBox = () => (\n  <Box\n    css={{\n      bg: 'success',\n      p: 8,\n      width: '25%',\n      display: 'flex',\n      justifyContent: 'center',\n    }}\n  >\n    <Text color=\"white\">Box Example</Text>\n  </Box>\n);\n"})}),"\n",(0,s.jsx)(n.h3,{id:"box-as-button",children:(0,s.jsx)(n.a,{href:"#box-as-button",children:"Box as Button"})}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"as"})," prop is set to a button HTMLElement on the left side and to a Marigold button on the right."]}),"\n",(0,s.jsx)(r,{children:(0,s.jsx)(l,{})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:'import { Box, Button, Inline } from \'@marigold/components\';\n\nexport const ButtonBox = () => (\n  <Inline space="medium">\n    <Box\n      as="button"\n      css={{\n        bg: \'primary\',\n        p: 8,\n      }}\n    >\n      I am a button\n    </Box>\n    <Box as={Button} variant="primary">\n      I am a button\n    </Box>\n  </Inline>\n);\n'})}),"\n",(0,s.jsx)(n.h3,{id:"box-with-several-props",children:(0,s.jsx)(n.a,{href:"#box-with-several-props",children:"Box with several props"})}),"\n",(0,s.jsxs)(n.p,{children:["How to use different props and CSS on the ",(0,s.jsx)(n.code,{children:"<Box>"}),"."]}),"\n",(0,s.jsx)(r,{children:(0,s.jsx)(x,{})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"import { Box } from '@marigold/components';\n\nexport const TextBox = () => (\n  <Box\n    as=\"p\"\n    css={{\n      border: '1px solid',\n      borderRadius: 5,\n      p: 8,\n      bg: 'lightseagreen',\n      color: 'white',\n    }}\n  >\n    I am a paragraph with a lot of props!\n  </Box>\n);\n"})})]})}function c(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}n.default=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=Object.assign({},(0,t.ah)(),e.components),o=n.wrapper;return o?(0,s.jsx)(o,Object.assign({},e,{children:(0,s.jsx)(a,e)})):a(e)}}},function(e){e.O(0,[9774,2888,179],(function(){return n=968,e(e.s=n);var n}));var n=e.O();_N_E=n}]);