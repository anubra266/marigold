(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[2642],{4085:function(e,r,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/components/date-picker",function(){return t(8316)}])},8316:function(e,r,t){"use strict";t.r(r),t.d(r,{__N_SSG:function(){return n},title:function(){return c}});var i=t(5250),a=t(7160),n=!0,c="DatePicker";function o(e){var r=Object.assign({p:"p",code:"code",h2:"h2",a:"a",h3:"h3",pre:"pre"},(0,a.ah)(),e.components),t=r.Toc,n=r.Preview,c=r.BasicDatePicker,o=r.PropsTable,d=r.DisabledDatePicker,l=r.RequiredDatePicker,p=r.ErrorDatePicker,h=r.MinMaxDatePicker;return c||s("BasicDatePicker",!0),d||s("DisabledDatePicker",!0),p||s("ErrorDatePicker",!0),h||s("MinMaxDatePicker",!0),n||s("Preview",!0),o||s("PropsTable",!0),l||s("RequiredDatePicker",!0),t||s("Toc",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t,{selector:"#toc",items:'[{"anchor":"#usage","title":"Usage"},{"anchor":"#import","title":"Import"},{"anchor":"#props","title":"Props"},{"anchor":"#examples","title":"Examples"},{"anchor":"#simple-datepicker","title":"Simple DatePicker"},{"anchor":"#disabled-datepicker","title":"Disabled DatePicker"},{"anchor":"#required-datepicker","title":"Required DatePicker"},{"anchor":"#datepicker-with-an-error","title":"DatePicker With an Error"},{"anchor":"#datepicker-with-minimum-and-maximum-values","title":"DatePicker With Minimum and maximum values"}]'}),"\n",(0,i.jsxs)(r.p,{children:["The ",(0,i.jsx)(r.code,{children:"<DatePicker>"})," component is a user interface element that allows users to select a date from a calendar."]}),"\n",(0,i.jsx)(r.p,{children:"The typical practice is to provide a date picker and when you click on date picker button it pops up a calendar below the date picker, allowing the user to populate the field with an appropriate date."}),"\n",(0,i.jsx)(n,{children:(0,i.jsx)(c,{})}),"\n",(0,i.jsx)(r.h2,{id:"usage",children:(0,i.jsx)(r.a,{href:"#usage",children:"Usage"})}),"\n",(0,i.jsx)(r.h3,{id:"import",children:(0,i.jsx)(r.a,{href:"#import",children:"Import"})}),"\n",(0,i.jsx)(r.p,{children:"To import the component you just have to use this code below."}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-tsx",children:"import { DatePicker } from '@marigold/components';\n"})}),"\n",(0,i.jsx)(r.h3,{id:"props",children:(0,i.jsx)(r.a,{href:"#props",children:"Props"})}),"\n",(0,i.jsx)(o,{props:[{property:"label",type:"ReactNode",description:"The label text. ",default:"none"},{property:"description",type:"ReactNode",description:"A helpful text.",default:"none"},{property:"errorMessage",type:"ReactNode",description:"An error message.",default:"none"},{property:"error",type:"boolean",description:"If `true`, the field is considered invalid and if set the errorMessage is shown instead of the `description`.",default:"false"},{property:"defaultValue",type:"DateValue",description:"The default value of the date picker.",default:"none"},{property:"value",type:"DateValue",description:"The value of the date picker.",default:"none"},{property:"disabled",type:"boolean",description:"If `true`, the date picker is disabled.",default:"false"},{property:"required",type:"boolean",description:"If `true`, the date picker is required.",default:"false"},{property:"readOnly",type:"boolean",description:"If `true`, the date picker is readOnly.",default:"false"},{property:"onChange",type:"function",description:"A callback function that is called with the date picker's current value changes",default:"none"},{property:"open",type:"boolean",description:"Whether the calendar is open by default (controlled).",default:"false"},{property:"minValue",type:"DateValue",description:"The minimum allowed date that a user may select.",default:"none"},{property:"maxValue",type:"DateValue",description:"The maximum allowed date that a user may select.",default:"none"}]}),"\n",(0,i.jsx)(r.h2,{id:"examples",children:(0,i.jsx)(r.a,{href:"#examples",children:"Examples"})}),"\n",(0,i.jsx)(r.h3,{id:"simple-datepicker",children:(0,i.jsx)(r.a,{href:"#simple-datepicker",children:"Simple DatePicker"})}),"\n",(0,i.jsxs)(r.p,{children:["This example shows a regular ",(0,i.jsx)(r.code,{children:"<DatePicker>"})," without any special props."]}),"\n",(0,i.jsx)(n,{children:(0,i.jsx)(c,{})}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-tsx",children:'import { DatePicker } from \'@marigold/components\';\n\nexport const BasicDatePicker = () => (\n  <DatePicker\n    label="Birth Picker"\n    description="Determine min and max value for date picker"\n  />\n);\n'})}),"\n",(0,i.jsx)(r.h3,{id:"disabled-datepicker",children:(0,i.jsx)(r.a,{href:"#disabled-datepicker",children:"Disabled DatePicker"})}),"\n",(0,i.jsxs)(r.p,{children:["You can disable the ",(0,i.jsx)(r.code,{children:"<DatePicker>"})," so that the user can't interact with it anymore."]}),"\n",(0,i.jsx)(n,{children:(0,i.jsx)(d,{})}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-tsx",children:'import { DatePicker } from \'@marigold/components\';\n\nexport const DisabledDatePicker = () => (\n  <DatePicker label="Birth Date" description="disabled date picker" disabled />\n);\n'})}),"\n",(0,i.jsx)(r.h3,{id:"required-datepicker",children:(0,i.jsx)(r.a,{href:"#required-datepicker",children:"Required DatePicker"})}),"\n",(0,i.jsxs)(r.p,{children:["If you want a ",(0,i.jsx)(r.code,{children:"<DatePicker>"})," to be required, you just have to add the property ",(0,i.jsx)(r.code,{children:"required"}),". With that the small required icon appears next to the label."]}),"\n",(0,i.jsx)(n,{children:(0,i.jsx)(l,{})}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-tsx",children:"import { DatePicker } from '@marigold/components';\n\nexport const RequiredDatePicker = () => (\n  <DatePicker required label=\"Birth Date\" />\n);\n"})}),"\n",(0,i.jsx)(r.h3,{id:"datepicker-with-an-error",children:(0,i.jsx)(r.a,{href:"#datepicker-with-an-error",children:"DatePicker With an Error"})}),"\n",(0,i.jsxs)(r.p,{children:["This example shows how to use the ",(0,i.jsx)(r.code,{children:"error"})," with the ",(0,i.jsx)(r.code,{children:"errorMessage"}),"."]}),"\n",(0,i.jsx)(n,{children:(0,i.jsx)(p,{})}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-tsx",children:'import { DatePicker } from \'@marigold/components\';\n\nexport const ErrorDatePicker = () => (\n  <DatePicker label="Birth Date" error errorMessage="Something went wrong!" />\n);\n'})}),"\n",(0,i.jsx)(r.h3,{id:"datepicker-with-minimum-and-maximum-values",children:(0,i.jsx)(r.a,{href:"#datepicker-with-minimum-and-maximum-values",children:"DatePicker With Minimum and maximum values"})}),"\n",(0,i.jsxs)(r.p,{children:["The ",(0,i.jsx)(r.code,{children:"minValue"})," and ",(0,i.jsx)(r.code,{children:"maxValue"})," props can also be used to perform builtin validation. This prevents the user from selecting dates outside the valid range in the calendar ."]}),"\n",(0,i.jsx)(n,{children:(0,i.jsx)(h,{})}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-tsx",children:"import { CalendarDate } from '@internationalized/date';\nimport { DatePicker } from '@marigold/components';\n\nexport const MinMaxDatePicker = () => (\n  <DatePicker\n    label=\"Date Picker\"\n    description=\"Determine min and max value for date picker\"\n    minValue={new CalendarDate(2019, 6, 5)}\n    maxValue={new CalendarDate(2019, 6, 20)}\n  />\n);\n"})})]})}function s(e,r){throw new Error("Expected "+(r?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}r.default=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},r=Object.assign({},(0,a.ah)(),e.components),t=r.wrapper;return t?(0,i.jsx)(t,Object.assign({},e,{children:(0,i.jsx)(o,e)})):o(e)}}},function(e){e.O(0,[9774,2888,179],(function(){return r=4085,e(e.s=r);var r}));var r=e.O();_N_E=r}]);