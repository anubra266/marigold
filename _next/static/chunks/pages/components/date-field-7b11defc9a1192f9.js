(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[727],{1884:function(e,i,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/components/date-field",function(){return t(5492)}])},5492:function(e,i,t){"use strict";t.r(i),t.d(i,{__N_SSG:function(){return a},title:function(){return d}});var n=t(5250),r=t(7160),a=!0,d="DateField";function l(e){var i=Object.assign({p:"p",code:"code",h2:"h2",a:"a",h3:"h3",pre:"pre"},(0,r.ah)(),e.components),t=i.Toc,a=i.Preview,d=i.BasicDateField,l=i.PropsTable,o=i.DisabledDateField,c=i.RequiredDateField,h=i.ErrorDateField,p=i.DateFieldWithIcons;return d||s("BasicDateField",!0),p||s("DateFieldWithIcons",!0),o||s("DisabledDateField",!0),h||s("ErrorDateField",!0),a||s("Preview",!0),l||s("PropsTable",!0),c||s("RequiredDateField",!0),t||s("Toc",!0),(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t,{selector:"#toc",items:'[{"anchor":"#usage","title":"Usage"},{"anchor":"#import","title":"Import"},{"anchor":"#props","title":"Props"},{"anchor":"#examples","title":"Examples"},{"anchor":"#simple-datefield","title":"Simple DateField"},{"anchor":"#disabled-datefield","title":"Disabled DateField"},{"anchor":"#required-datefield","title":"Required DateField"},{"anchor":"#datefield-with-an-error","title":"DateField With an Error"},{"anchor":"#datefield-with-icons","title":"DateField With Icons"}]'}),"\n",(0,n.jsxs)(i.p,{children:["The ",(0,n.jsx)(i.code,{children:"<DateField>"})," allows users to enter and edit date values using a keyboard. Each part of a date value is displayed in an individually editable segment."]}),"\n",(0,n.jsxs)(i.p,{children:["The ",(0,n.jsx)(i.code,{children:"<DateField>"})," segments are individually focusable and editable by the user, by typing or using the arrow keys to increment and decrement the value. This approach allows values to be formatted and parsed correctly regardless of the locale or date format, and offers an easy and error-free way to edit dates using the keyboard."]}),"\n",(0,n.jsx)(a,{children:(0,n.jsx)(d,{})}),"\n",(0,n.jsx)(i.h2,{id:"usage",children:(0,n.jsx)(i.a,{href:"#usage",children:"Usage"})}),"\n",(0,n.jsx)(i.h3,{id:"import",children:(0,n.jsx)(i.a,{href:"#import",children:"Import"})}),"\n",(0,n.jsx)(i.p,{children:"To import the component you just have to use this code below."}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{className:"language-tsx",children:"import { DateField } from '@marigold/components';\n"})}),"\n",(0,n.jsx)(i.h3,{id:"props",children:(0,n.jsx)(i.a,{href:"#props",children:"Props"})}),"\n",(0,n.jsx)(l,{props:[{property:"label",type:"ReactNode",description:"The label text. ",default:"none"},{property:"description",type:"ReactNode",description:"A helpful text.",default:"none"},{property:"errorMessage",type:"ReactNode",description:"An error message.",default:"none"},{property:"error",type:"boolean",description:"If `true`, the field is considered invalid and if set the errorMessage is shown instead of the `description`.",default:"false"},{property:"defaultValue",type:"DateValue",description:"The default value of the date field.",default:"none"},{property:"value",type:"DateValue",description:"The value of the date field.",default:"none"},{property:"disabled",type:"boolean",description:"If `true`, the date field is disabled.",default:"false"},{property:"required",type:"boolean",description:"If `true`, the date field is required.",default:"false"},{property:"readOnly",type:"boolean",description:"If `true`, the date field is readOnly.",default:"false"},{property:"onChange",type:"function",description:"A callback function that is called with the date field's current value changes.",default:"none"},{property:"width",type:"string",description:"Control the width of the field.",default:"100%"}]}),"\n",(0,n.jsx)(i.h2,{id:"examples",children:(0,n.jsx)(i.a,{href:"#examples",children:"Examples"})}),"\n",(0,n.jsx)(i.h3,{id:"simple-datefield",children:(0,n.jsx)(i.a,{href:"#simple-datefield",children:"Simple DateField"})}),"\n",(0,n.jsxs)(i.p,{children:["This example shows a regular ",(0,n.jsx)(i.code,{children:"<DateField>"})," without any special props."]}),"\n",(0,n.jsx)(a,{children:(0,n.jsx)(d,{})}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{className:"language-tsx",children:"import { CalendarDate } from '@internationalized/date';\nimport { DateField } from '@marigold/components';\n\nexport const BasicDateField = () => (\n  <DateField\n    label=\"Date field\"\n    defaultValue={new CalendarDate(2020, 2, 3)}\n    description=\"This is description\"\n  />\n);\n"})}),"\n",(0,n.jsx)(i.h3,{id:"disabled-datefield",children:(0,n.jsx)(i.a,{href:"#disabled-datefield",children:"Disabled DateField"})}),"\n",(0,n.jsxs)(i.p,{children:["You can disable the ",(0,n.jsx)(i.code,{children:"<DateField>"})," so that the user can't interact with it anymore."]}),"\n",(0,n.jsx)(a,{children:(0,n.jsx)(o,{})}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{className:"language-tsx",children:'import { DateField } from \'@marigold/components\';\n\nexport const DisabledDateField = () => (\n  <DateField\n    label="Field Disabled"\n    disabled\n    description="This field is disabled"\n  />\n);\n'})}),"\n",(0,n.jsx)(i.h3,{id:"required-datefield",children:(0,n.jsx)(i.a,{href:"#required-datefield",children:"Required DateField"})}),"\n",(0,n.jsxs)(i.p,{children:["If you want a ",(0,n.jsx)(i.code,{children:"<DateField>"})," to be required, you just have to add the property ",(0,n.jsx)(i.code,{children:"required"}),". With that the small required icon appears next to the label."]}),"\n",(0,n.jsx)(a,{children:(0,n.jsx)(c,{})}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{className:"language-tsx",children:'import { DateField } from \'@marigold/components\';\n\nexport const RequiredDateField = () => (\n  <DateField label="Date" required description="required field" />\n);\n'})}),"\n",(0,n.jsx)(i.h3,{id:"datefield-with-an-error",children:(0,n.jsx)(i.a,{href:"#datefield-with-an-error",children:"DateField With an Error"})}),"\n",(0,n.jsxs)(i.p,{children:["This example shows how to use the ",(0,n.jsx)(i.code,{children:"error"})," with the ",(0,n.jsx)(i.code,{children:"errorMessage"}),"."]}),"\n",(0,n.jsx)(a,{children:(0,n.jsx)(h,{})}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{className:"language-tsx",children:'import { DateField } from \'@marigold/components\';\n\nexport const ErrorDateField = () => (\n  <DateField label="Date field" error errorMessage="Something went wrong !" />\n);\n'})}),"\n",(0,n.jsx)(i.h3,{id:"datefield-with-icons",children:(0,n.jsx)(i.a,{href:"#datefield-with-icons",children:"DateField With Icons"})}),"\n",(0,n.jsx)(i.p,{children:"In this example we can use leading and trailing icons."}),"\n",(0,n.jsx)(a,{children:(0,n.jsx)(p,{})}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{className:"language-tsx",children:"import { Button, DateField } from '@marigold/components';\nimport { Calendar, SmilieSatisfied } from '@marigold/icons';\n\nexport const DateFieldWithIcons = () => (\n  <DateField\n    label=\"Date field\"\n    icon={<SmilieSatisfied />}\n    action={\n      <Button style={{ padding: '8px' }} variant=\"text\">\n        <Calendar />\n      </Button>\n    }\n  />\n);\n"})})]})}function s(e,i){throw new Error("Expected "+(i?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}i.default=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},i=Object.assign({},(0,r.ah)(),e.components),t=i.wrapper;return t?(0,n.jsx)(t,Object.assign({},e,{children:(0,n.jsx)(l,e)})):l(e)}}},function(e){e.O(0,[9774,2888,179],(function(){return i=1884,e(e.s=i);var i}));var i=e.O();_N_E=i}]);