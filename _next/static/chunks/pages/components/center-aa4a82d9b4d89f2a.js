(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[3913],{4599:function(e,n,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/components/center",function(){return t(4493)}])},4493:function(e,n,t){"use strict";t.r(n),t.d(n,{__N_SSG:function(){return i},title:function(){return s}});var r=t(5250),o=t(7160),i=!0,s="Center";function c(e){var n=Object.assign({p:"p",code:"code",a:"a",h2:"h2",h3:"h3",pre:"pre"},(0,o.ah)(),e.components),t=n.Toc,i=n.Preview,s=n.BasicCenter,c=n.PropsTable,h=n.WidthCenter,d=n.SpaceCenter,l=n.TextCenter,x=n.BoxCenter;return s||a("BasicCenter",!0),x||a("BoxCenter",!0),i||a("Preview",!0),c||a("PropsTable",!0),d||a("SpaceCenter",!0),l||a("TextCenter",!0),t||a("Toc",!0),h||a("WidthCenter",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t,{selector:"#toc",items:'[{"anchor":"#usage","title":"Usage"},{"anchor":"#import","title":"Import"},{"anchor":"#props","title":"Props"},{"anchor":"#examples","title":"Examples"},{"anchor":"#center-element-with-maximum-width","title":"Center element with maximum width"},{"anchor":"#center-more-than-one-element-with-space","title":"Center more than one element with space"},{"anchor":"#center-inside-text-block","title":"Center inside Text Block"},{"anchor":"#center-something-inside-a-box","title":"Center something inside a box"}]'}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"<Center>"})," is a layout component that centers its children horizontally.\nYou can use it to center a single child or a list of children. The ",(0,r.jsx)(n.code,{children:"<Center>"})," component has also the property maxWidth."]}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"<Center>"})," component can also be a child from the ",(0,r.jsx)(n.a,{href:"/components/stack/",children:(0,r.jsx)(n.code,{children:"<Stack>"})})," or ",(0,r.jsx)(n.a,{href:"/components/inline/",children:(0,r.jsx)(n.code,{children:"<Inline>"})})," component."]}),"\n",(0,r.jsx)(i,{children:(0,r.jsx)(s,{})}),"\n",(0,r.jsx)(n.h2,{id:"usage",children:(0,r.jsx)(n.a,{href:"#usage",children:"Usage"})}),"\n",(0,r.jsx)(n.h3,{id:"import",children:(0,r.jsx)(n.a,{href:"#import",children:"Import"})}),"\n",(0,r.jsx)(n.p,{children:"To import the component you just have to use this code below."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:"import { Center } from '@marigold/components';\n"})}),"\n",(0,r.jsx)(n.h3,{id:"props",children:(0,r.jsx)(n.a,{href:"#props",children:"Props"})}),"\n",(0,r.jsx)(c,{props:[{property:"space",description:"The space between the children",type:"ResponsiveStyleValue<string>",default:"none"},{property:"maxWidth",description:"The maximum width of the container.",type:"string",default:""}]}),"\n",(0,r.jsx)(n.h2,{id:"examples",children:(0,r.jsx)(n.a,{href:"#examples",children:"Examples"})}),"\n",(0,r.jsx)(n.h3,{id:"center-element-with-maximum-width",children:(0,r.jsx)(n.a,{href:"#center-element-with-maximum-width",children:"Center element with maximum width"})}),"\n",(0,r.jsxs)(n.p,{children:["To center an element you must give the element a ",(0,r.jsx)(n.code,{children:"maxWidth"})," prop."]}),"\n",(0,r.jsx)(i,{children:(0,r.jsx)(h,{})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:"import { Box, Center } from '@marigold/components';\n\nexport const WidthCenter = () => (\n  <Center maxWidth=\"xxlarge\">\n    <Box\n      css={{\n        border: '1px solid #ced4da',\n        bg: '#e9ecef',\n        height: '100px',\n        width: '100%',\n      }}\n    />\n  </Center>\n);\n"})}),"\n",(0,r.jsx)(n.h3,{id:"center-more-than-one-element-with-space",children:(0,r.jsx)(n.a,{href:"#center-more-than-one-element-with-space",children:"Center more than one element with space"})}),"\n",(0,r.jsxs)(n.p,{children:["To add spaces between each child you can use the prop ",(0,r.jsx)(n.code,{children:"space"}),"."]}),"\n",(0,r.jsx)(i,{children:(0,r.jsx)(d,{})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:"import { Box, Center } from '@marigold/components';\n\nexport const SpaceCenter = () => (\n  <Center maxWidth=\"xxlarge\" space=\"xsmall\">\n    <Box\n      css={{\n        border: '1px solid #ced4da',\n        bg: '#e9ecef',\n        height: '100px',\n        width: '100%',\n      }}\n    />\n    <Box\n      css={{\n        border: '1px solid #ced4da',\n        bg: '#e9ecef',\n        height: '100px',\n        width: '100%',\n      }}\n    />\n    <Box\n      css={{\n        border: '1px solid #ced4da',\n        bg: '#e9ecef',\n        height: '100px',\n        width: '100%',\n      }}\n    />\n  </Center>\n);\n"})}),"\n",(0,r.jsx)(n.h3,{id:"center-inside-text-block",children:(0,r.jsx)(n.a,{href:"#center-inside-text-block",children:"Center inside Text Block"})}),"\n",(0,r.jsxs)(n.p,{children:["If you want to center something like a ",(0,r.jsx)(n.code,{children:"<Button>"})," you must only wrap your component with a ",(0,r.jsx)(n.code,{children:"<Center>"})," component."]}),"\n",(0,r.jsx)(i,{children:(0,r.jsx)(l,{})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:'import { Button, Center, Headline, Stack, Text } from \'@marigold/components\';\n\nexport const TextCenter = () => (\n  <Stack space="medium">\n    <Headline level="2">Star Wars - The Empire Strikes Back</Headline>\n    <Text>\n      It is a dark time for the Rebellion. Although the Death Star has been\n      destroyed, Imperial troops have driven the Rebel forces from their hidden\n      base and pursued them across the galaxy.\n    </Text>\n    <Center>\n      <Button variant="secondary">Watch now</Button>\n    </Center>\n    <Text>\n      Evading the dreaded Imperial Starfleet, a group of freedom fighters led by\n      Luke Skywalker has established a new secret base on the remote ice world\n      of Hoth. The evil lord Darth Vader, obsessed with finding young Skywalker,\n      has dispatched thousands of remote probes into the far reaches of\n      space....\n    </Text>\n  </Stack>\n);\n'})}),"\n",(0,r.jsx)(n.h3,{id:"center-something-inside-a-box",children:(0,r.jsx)(n.a,{href:"#center-something-inside-a-box",children:"Center something inside a box"})}),"\n",(0,r.jsxs)(n.p,{children:["If you want to center an Element inside a ",(0,r.jsx)(n.code,{children:"<Box>"})," Component. You must give the ",(0,r.jsx)(n.code,{children:"<Box>"})," component the prop ",(0,r.jsx)(n.code,{children:"as={Center}"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["For additional Information please check the ",(0,r.jsx)(n.a,{href:"/foundation/box-primitive/",children:"Box Primitive"})," Page."]}),"\n",(0,r.jsx)(i,{children:(0,r.jsx)(x,{})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:"import { Box, Center, Inline, Text } from '@marigold/components';\nimport { Stop, Play, Pause } from '@marigold/icons';\n\nexport const BoxCenter = () => (\n  <Inline space=\"xsmall\">\n    <Box\n      as={Center}\n      css={{\n        border: '2px solid #ced4da',\n        width: '80px',\n        height: '40px',\n      }}\n    >\n      <Text color=\"secondary\">Song 1</Text>\n    </Box>\n    <Box\n      as={Center}\n      css={{\n        bg: 'secondary',\n        width: '40px',\n        height: '40px',\n      }}\n    >\n      <Play fill=\"white\" />\n    </Box>\n    <Box\n      as={Center}\n      css={{\n        bg: 'secondary',\n        width: '40px',\n        height: '40px',\n      }}\n    >\n      <Pause fill=\"white\" />\n    </Box>\n    <Box\n      as={Center}\n      css={{\n        bg: 'secondary',\n        width: '40px',\n        height: '40px',\n      }}\n    >\n      <Stop fill=\"white\" />\n    </Box>\n  </Inline>\n);\n"})})]})}function a(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}n.default=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=Object.assign({},(0,o.ah)(),e.components),t=n.wrapper;return t?(0,r.jsx)(t,Object.assign({},e,{children:(0,r.jsx)(c,e)})):c(e)}}},function(e){e.O(0,[9774,2888,179],(function(){return n=4599,e(e.s=n);var n}));var n=e.O();_N_E=n}]);