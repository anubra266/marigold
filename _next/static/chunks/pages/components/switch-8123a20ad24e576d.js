(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[3733],{5260:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/components/switch",function(){return n(3868)}])},3868:function(e,t,n){"use strict";n.r(t),n.d(t,{__N_SSG:function(){return a},title:function(){return c}});var i=n(5250),s=n(8570),a=!0;let c="Switch";function o(e){let t=Object.assign({p:"p",code:"code",br:"br",h2:"h2",a:"a",h3:"h3",pre:"pre"},(0,s.ah)(),e.components),{Toc:n,Preview:a,Switch:o,AppearanceTable:h,PropsTable:l,BasicSwitch:d,ActiveSwitch:p,DisabledSwitch:x,ActiveDisabledSwitch:u}=t;return u||r("ActiveDisabledSwitch",!0),p||r("ActiveSwitch",!0),h||r("AppearanceTable",!0),d||r("BasicSwitch",!0),x||r("DisabledSwitch",!0),a||r("Preview",!0),l||r("PropsTable",!0),o||r("Switch",!0),n||r("Toc",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n,{selector:"#toc",items:'[{"anchor":"#usage","title":"Usage"},{"anchor":"#import","title":"Import"},{"anchor":"#apperance","title":"Apperance"},{"anchor":"#props","title":"Props"},{"anchor":"#examples","title":"Examples"},{"anchor":"#default","title":"Default"},{"anchor":"#active","title":"Active"},{"anchor":"#disabled","title":"Disabled"},{"anchor":"#disabled-active","title":"Disabled (active)"}]'}),"\n",(0,i.jsxs)(t.p,{children:["The ",(0,i.jsx)(t.code,{children:"<Switch>"})," component allows the users to select between two states, e.g. on and off.",(0,i.jsx)(t.br,{}),"\n","It consists of a visual selection indicator and a label."]}),"\n",(0,i.jsx)(t.p,{children:"Users may click or touch a Switch to toggle the state, or use the tab key to navigate to it and the space key to toggle it."}),"\n",(0,i.jsx)(t.p,{children:"The styles are separated into some parts (container, label, thumb, track) that you can style in a custom variant."}),"\n",(0,i.jsx)(a,{children:(0,i.jsx)(o,{"aria-label":"demo-switch"})}),"\n",(0,i.jsx)(t.h2,{id:"usage",children:(0,i.jsx)(t.a,{href:"#usage",children:"Usage"})}),"\n",(0,i.jsx)(t.h3,{id:"import",children:(0,i.jsx)(t.a,{href:"#import",children:"Import"})}),"\n",(0,i.jsx)(t.p,{children:"To import the component you just have to use this code below."}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-tsx",children:"import { Switch } from '@marigold/components';\n"})}),"\n",(0,i.jsx)(t.h3,{id:"apperance",children:(0,i.jsx)(t.a,{href:"#apperance",children:"Apperance"})}),"\n",(0,i.jsx)(h,{component:c}),"\n",(0,i.jsx)(t.h3,{id:"props",children:(0,i.jsx)(t.a,{href:"#props",children:"Props"})}),"\n",(0,i.jsx)(l,{props:[{property:"disabled",type:"boolean",description:"Disables the switch.",default:"false"},{property:"checked",type:"boolean",description:"With this prop you can set the switch checked.",default:"false"},{property:"width",type:"string",description:"Control the width of the field.",default:"100%"},{property:"defaultChecked",type:"boolean",description:"Set the default checked status of the switch.",default:"false"},{property:"readOnly",type:"boolean",description:"Set the switch to read only.",default:"false"}]}),"\n",(0,i.jsx)(t.h2,{id:"examples",children:(0,i.jsx)(t.a,{href:"#examples",children:"Examples"})}),"\n",(0,i.jsx)(t.h3,{id:"default",children:(0,i.jsx)(t.a,{href:"#default",children:"Default"})}),"\n",(0,i.jsxs)(t.p,{children:["In this example you can see a simple ",(0,i.jsx)(t.code,{children:"<Switch>"})," component with no properties."]}),"\n",(0,i.jsx)(a,{children:(0,i.jsx)(d,{})}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-tsx",children:"import { Container, Switch } from '@marigold/components';\n\nexport const BasicSwitch = () => (\n  <Container>\n    <Switch>Default Switch</Switch>\n  </Container>\n);\n"})}),"\n",(0,i.jsx)(t.h3,{id:"active",children:(0,i.jsx)(t.a,{href:"#active",children:"Active"})}),"\n",(0,i.jsxs)(t.p,{children:["Here you can see an already active ",(0,i.jsx)(t.code,{children:"<Switch>"}),". It can be used when e.g. settings options are per default set to true."]}),"\n",(0,i.jsx)(a,{children:(0,i.jsx)(p,{})}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-tsx",children:"import { Container, Switch } from '@marigold/components';\n\nexport const ActiveSwitch = () => (\n  <Container>\n    <Switch defaultSelected>Active Switch</Switch>\n  </Container>\n);\n"})}),"\n",(0,i.jsx)(t.h3,{id:"disabled",children:(0,i.jsx)(t.a,{href:"#disabled",children:"Disabled"})}),"\n",(0,i.jsxs)(t.p,{children:["In this mode the user can not change the status of the ",(0,i.jsx)(t.code,{children:"<Switch>"}),". It can be used e.g. if you want to disable a certain setting for some users."]}),"\n",(0,i.jsx)(a,{children:(0,i.jsx)(x,{})}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-tsx",children:"import { Container, Switch } from '@marigold/components';\n\nexport const DisabledSwitch = () => (\n  <Container>\n    <Switch disabled>Disabled Switch</Switch>\n  </Container>\n);\n"})}),"\n",(0,i.jsx)(t.h3,{id:"disabled-active",children:(0,i.jsx)(t.a,{href:"#disabled-active",children:"Disabled (active)"})}),"\n",(0,i.jsx)(t.p,{children:'This mode can be used when an option is or was already active and there is a variable that does not allow the user switch to be moved from its "on" mode.'}),"\n",(0,i.jsx)(a,{children:(0,i.jsx)(u,{})}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-tsx",children:"import { Container, Switch } from '@marigold/components';\n\nexport const ActiveDisabledSwitch = () => (\n  <Container>\n    <Switch defaultSelected disabled>\n      Disabled active Switch\n    </Switch>\n  </Container>\n);\n"})})]})}function r(e,t){throw Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}t.default=function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:t}=Object.assign({},(0,s.ah)(),e.components);return t?(0,i.jsx)(t,Object.assign({},e,{children:(0,i.jsx)(o,e)})):o(e)}}},function(e){e.O(0,[9774,2888,179],function(){return e(e.s=5260)}),_N_E=e.O()}]);