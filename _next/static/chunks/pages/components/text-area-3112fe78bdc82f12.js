(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[2425],{5451:function(e,r,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/components/text-area",function(){return t(890)}])},890:function(e,r,t){"use strict";t.r(r),t.d(r,{__N_SSG:function(){return o},title:function(){return s}});var a=t(5250),n=t(8570),o=!0,s="TextArea";function i(e){var r=Object.assign({p:"p",code:"code",a:"a",h2:"h2",h3:"h3",pre:"pre"},(0,n.ah)(),e.components),t=r.Toc,o=r.Preview,s=r.TextArea,i=r.PropsTable,d=r.BasicTextArea,c=r.DisabledTextArea,h=r.RequiredTextArea,p=r.ErrorTextArea;return d||l("BasicTextArea",!0),c||l("DisabledTextArea",!0),p||l("ErrorTextArea",!0),o||l("Preview",!0),i||l("PropsTable",!0),h||l("RequiredTextArea",!0),s||l("TextArea",!0),t||l("Toc",!0),(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t,{selector:"#toc",items:'[{"anchor":"#usage","title":"Usage"},{"anchor":"#import","title":"Import"},{"anchor":"#props","title":"Props"},{"anchor":"#examples","title":"Examples"},{"anchor":"#simple-textarea","title":"Simple TextArea"},{"anchor":"#disabled-textarea","title":"Disabled Textarea"},{"anchor":"#required-textarea","title":"Required Textarea"},{"anchor":"#error-textarea","title":"Error Textarea"}]'}),"\n",(0,a.jsxs)(r.p,{children:["The ",(0,a.jsx)(r.code,{children:"<TextArea>"})," is a form component which allows user to enter text with a keyboard. It consists of a label, a textarea and a help text. The latter also contains error messages."]}),"\n",(0,a.jsxs)(r.p,{children:["It is behaves similar to the ",(0,a.jsx)(r.a,{href:"/components/text-field/",children:(0,a.jsx)(r.code,{children:"<TextField>"})}),". The properties have the identical behavior as the ones in ",(0,a.jsx)(r.a,{href:"/components/text-field/",children:(0,a.jsx)(r.code,{children:"<TextField>"})}),"."]}),"\n",(0,a.jsx)(r.p,{children:"You can also add all usual properties from the HTML textarea element."}),"\n",(0,a.jsx)(o,{children:(0,a.jsx)(s,{label:"Enter a story",description:"Anything you want to tell me!?"})}),"\n",(0,a.jsx)(r.h2,{id:"usage",children:(0,a.jsx)(r.a,{href:"#usage",children:"Usage"})}),"\n",(0,a.jsx)(r.h3,{id:"import",children:(0,a.jsx)(r.a,{href:"#import",children:"Import"})}),"\n",(0,a.jsx)(r.p,{children:"To import the component you just have to use this code below."}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-tsx",children:"import { TextArea } from '@marigold/components';\n"})}),"\n",(0,a.jsx)(r.h3,{id:"props",children:(0,a.jsx)(r.a,{href:"#props",children:"Props"})}),"\n",(0,a.jsx)(i,{props:[{property:"label",type:"ReactNode",description:"The label text.",default:"none"},{property:"description",type:"ReactNode",description:"A helpful text.",default:"none"},{property:"errorMessage",type:"ReactNode",description:"An error message.",default:"none"},{property:"error",type:"boolean",description:"If true, the is considered invalid and if set the errorMessage is shown instead of the description.",default:"false"},{property:"value",type:"string",description:"The value of the textarea.",default:"none"},{property:"disabled",type:"boolean",description:"If true, the textarea is disabled.",default:"false"},{property:"required",type:"boolean",description:"If true, the textarea is required.",default:"false"},{property:"readOnly",type:"boolean",description:"If true, the textarea is readOnly.",default:"false"},{property:"onChange",type:"function",description:"A callback function that is called with the textarea's current value when the input value changes.",default:"none"},{property:"width",type:"string",description:"Sets the width of the textarea.",default:"none"},{property:"rows",type:"number",description:"Sets the number of rows from the textarea.",default:"none"},{property:"...",type:"",description:"Yes you can use all regular attributes of textarea!",default:""}]}),"\n",(0,a.jsx)(r.h2,{id:"examples",children:(0,a.jsx)(r.a,{href:"#examples",children:"Examples"})}),"\n",(0,a.jsx)(r.h3,{id:"simple-textarea",children:(0,a.jsx)(r.a,{href:"#simple-textarea",children:"Simple TextArea"})}),"\n",(0,a.jsxs)(r.p,{children:["In this example you can see how a basic ",(0,a.jsx)(r.code,{children:"<TextArea>"})," can look like."]}),"\n",(0,a.jsx)(o,{children:(0,a.jsx)(d,{})}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-tsx",children:'import { TextArea } from \'@marigold/components\';\n\nexport const BasicTextArea = () => (\n  <TextArea label="Simple" placeholder="Placeholder" />\n);\n'})}),"\n",(0,a.jsx)(r.h3,{id:"disabled-textarea",children:(0,a.jsx)(r.a,{href:"#disabled-textarea",children:"Disabled Textarea"})}),"\n",(0,a.jsxs)(r.p,{children:["If you want to build a disabled ",(0,a.jsx)(r.code,{children:"<TextArea>"}),", you have to add the ",(0,a.jsx)(r.code,{children:"disabled"})," property."]}),"\n",(0,a.jsx)(o,{children:(0,a.jsx)(c,{})}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-tsx",children:'import { TextArea } from \'@marigold/components\';\n\nexport const DisabledTextArea = () => (\n  <TextArea\n    label="Can\'t touch this"\n    placeholder="Placeholder disabled"\n    disabled\n  />\n);\n'})}),"\n",(0,a.jsx)(r.h3,{id:"required-textarea",children:(0,a.jsx)(r.a,{href:"#required-textarea",children:"Required Textarea"})}),"\n",(0,a.jsxs)(r.p,{children:["The ",(0,a.jsx)(r.code,{children:"required"})," property adds an required icon to the label. You can also see that the ",(0,a.jsx)(r.code,{children:"rows"})," prop is set to 6 lines."]}),"\n",(0,a.jsx)(o,{children:(0,a.jsx)(h,{})}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-tsx",children:"import { TextArea } from '@marigold/components';\n\nexport const RequiredTextArea = () => (\n  <TextArea label=\"Required Textarea\" required rows={6} />\n);\n"})}),"\n",(0,a.jsx)(r.h3,{id:"error-textarea",children:(0,a.jsx)(r.a,{href:"#error-textarea",children:"Error Textarea"})}),"\n",(0,a.jsxs)(r.p,{children:["The example shows how to set the ",(0,a.jsx)(r.code,{children:"error"})," and ",(0,a.jsx)(r.code,{children:"errorMessage"})," properties. If you fill the texarea correctly, it will disappear automatically."]}),"\n",(0,a.jsx)(o,{children:(0,a.jsx)(p,{})}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-tsx",children:'import { TextArea } from \'@marigold/components\';\n\nexport const ErrorTextArea = () => (\n  <TextArea\n    label="Required Textarea with error"\n    error\n    errorMessage="Oh no, we have an error!"\n  />\n);\n'})})]})}function l(e,r){throw new Error("Expected "+(r?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}r.default=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},r=Object.assign({},(0,n.ah)(),e.components),t=r.wrapper;return t?(0,a.jsx)(t,Object.assign({},e,{children:(0,a.jsx)(i,e)})):i(e)}}},function(e){e.O(0,[9774,2888,179],(function(){return r=5451,e(e.s=r);var r}));var r=e.O();_N_E=r}]);