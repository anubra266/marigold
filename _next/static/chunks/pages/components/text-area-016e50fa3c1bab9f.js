(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[2425],{9558:function(e,r,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/components/text-area",function(){return t(5221)}])},5221:function(e,r,t){"use strict";t.r(r),t.d(r,{__N_SSG:function(){return i},title:function(){return s}});var a=t(5250),n=t(8570),i=!0,s="TextArea";function o(e){var r=Object.assign({p:"p",code:"code",pre:"pre",h2:"h2",a:"a",h3:"h3"},(0,n.ah)(),e.components),t=r.Toc,i=r.Preview,s=r.TextArea,o=r.PropsTable,d=r.BasicTextArea,c=r.DisabledTextArea,p=r.RequiredTextArea,x=r.ErrorTextArea;return d||l("BasicTextArea",!0),c||l("DisabledTextArea",!0),x||l("ErrorTextArea",!0),i||l("Preview",!0),o||l("PropsTable",!0),p||l("RequiredTextArea",!0),s||l("TextArea",!0),t||l("Toc",!0),(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t,{selector:"#toc",items:'[{"anchor":"#props","title":"Props"},{"anchor":"#examples","title":"Examples"},{"anchor":"#simple-textarea","title":"Simple TextArea"},{"anchor":"#disabled-textarea","title":"Disabled Textarea"},{"anchor":"#required-textarea","title":"Required Textarea"},{"anchor":"#error-textarea","title":"Error Textarea"}]'}),"\n",(0,a.jsxs)(r.p,{children:["The ",(0,a.jsx)(r.code,{children:"TextArea"})," component allows the user to enter multiline text with a keyboard. It consists of a label, a textarea and a help text. The later also includes error messages."]}),"\n",(0,a.jsx)(i,{children:(0,a.jsx)(s,{label:"Enter a story",description:"Anything you want to tell me!?"})}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-tsx",children:"import { TextArea } from '@marigold/components';\n"})}),"\n",(0,a.jsx)(r.h2,{id:"props",children:(0,a.jsx)(r.a,{href:"#props",children:"Props"})}),"\n",(0,a.jsx)(o,{props:[{property:"label",type:"ReactNode",description:"The label text.",default:""},{property:"description",type:"ReactNode",description:"A helpful text.",default:""},{property:"errorMessage",type:"ReactNode",description:"An error message.",default:""},{property:"error",type:"boolean",description:"If true, the is considered invalid and if set the errorMessage is shown instead of the description.",default:"false"},{property:"value",type:"string",description:"The value of the field.",default:""},{property:"disabled",type:"boolean",description:"If true, the input is disabled.",default:"false"},{property:"required",type:"boolean",description:"If true, the input is required.",default:"false"},{property:"readOnly",type:"boolean",description:"If true, the input is readOnly.",default:"false"},{property:"onChange",type:"function",description:"A callback function that is called with the input's current value when the input value changes.",default:""},{property:"...",type:"",description:"Yes you can use all regular attributes of textarea!",default:""}]}),"\n",(0,a.jsx)(r.h2,{id:"examples",children:(0,a.jsx)(r.a,{href:"#examples",children:"Examples"})}),"\n",(0,a.jsx)(r.h3,{id:"simple-textarea",children:(0,a.jsx)(r.a,{href:"#simple-textarea",children:"Simple TextArea"})}),"\n",(0,a.jsx)(i,{children:(0,a.jsx)(d,{})}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-tsx",children:'import { TextArea } from \'@marigold/components\';\n\nexport const BasicTextArea = () => (\n  <TextArea label="Simple" placeholder="Placeholder" />\n);\n'})}),"\n",(0,a.jsx)(r.h3,{id:"disabled-textarea",children:(0,a.jsx)(r.a,{href:"#disabled-textarea",children:"Disabled Textarea"})}),"\n",(0,a.jsx)(i,{children:(0,a.jsx)(c,{})}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-tsx",children:'import { TextArea } from \'@marigold/components\';\n\nexport const DisabledTextArea = () => (\n  <TextArea\n    label="Can\'t touch this"\n    placeholder="Placeholder disabled"\n    disabled\n  />\n);\n'})}),"\n",(0,a.jsx)(r.h3,{id:"required-textarea",children:(0,a.jsx)(r.a,{href:"#required-textarea",children:"Required Textarea"})}),"\n",(0,a.jsx)(i,{children:(0,a.jsx)(p,{})}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-tsx",children:"import { TextArea } from '@marigold/components';\n\nexport const RequiredTextArea = () => (\n  <TextArea label=\"Required Textarea\" required />\n);\n"})}),"\n",(0,a.jsx)(r.h3,{id:"error-textarea",children:(0,a.jsx)(r.a,{href:"#error-textarea",children:"Error Textarea"})}),"\n",(0,a.jsx)(i,{children:(0,a.jsx)(x,{})}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-tsx",children:'import { TextArea } from \'@marigold/components\';\n\nexport const ErrorTextArea = () => (\n  <TextArea\n    label="Required Textarea with error"\n    error\n    errorMessage="Oh no, we have an error!"\n  />\n);\n'})})]})}function l(e,r){throw new Error("Expected "+(r?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}r.default=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},r=Object.assign({},(0,n.ah)(),e.components),t=r.wrapper;return t?(0,a.jsx)(t,Object.assign({},e,{children:(0,a.jsx)(o,e)})):o(e)}}},function(e){e.O(0,[9774,2888,179],(function(){return r=9558,e(e.s=r);var r}));var r=e.O();_N_E=r}]);