(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[5309],{2145:function(e,t,r){(window.__NEXT_P=window.__NEXT_P||[]).push(["/hooks/useTheme",function(){return r(3774)}])},3774:function(e,t,r){"use strict";r.r(t),r.d(t,{__N_SSG:function(){return h},title:function(){return o}});var n=r(5250),s=r(8570),h=!0;let o="useTheme";function i(e){let t=Object.assign({p:"p",code:"code",ul:"ul",li:"li",strong:"strong",pre:"pre",h2:"h2",a:"a",h3:"h3",useCurrentTheme:"useCurrentTheme"},(0,s.ah)(),e.components),{Toc:r,Preview:h}=t;return h||l("Preview",!0),r||l("Toc",!0),(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(r,{selector:"#toc",items:'[{"anchor":"#usage","title":"Usage"},{"anchor":"#import","title":"Import"},{"anchor":"#examples","title":"Examples"},{"anchor":"#get-all-the-theme-properties","title":"Get all the Theme Properties"}]'}),"\n",(0,n.jsxs)(t.p,{children:["The ",(0,n.jsx)(t.code,{children:"useTheme"})," is a hook that gets you the current theme and all of its attributes and properties."]}),"\n",(0,n.jsxs)(t.p,{children:["The ",(0,n.jsx)(t.code,{children:"useTheme"})," hook returns tree parameters:"]}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.strong,{children:"First:"})," returns the current ",(0,n.jsx)(t.code,{children:"theme"}),", if there isn't a theme it uses the ",(0,n.jsx)(t.code,{children:"__defaultTheme"})]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.strong,{children:"Second:"})," ",(0,n.jsx)(t.code,{children:"css"})]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.strong,{children:"Third:"})," ",(0,n.jsx)(t.code,{children:"get"})," value from theme by pasing a path e.g. ",(0,n.jsx)(t.code,{children:"colors.primary"})]}),"\n"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-tsx",children:"const { theme } = useTheme();\n"})}),"\n",(0,n.jsx)(t.h2,{id:"usage",children:(0,n.jsx)(t.a,{href:"#usage",children:"Usage"})}),"\n",(0,n.jsx)(t.h3,{id:"import",children:(0,n.jsx)(t.a,{href:"#import",children:"Import"})}),"\n",(0,n.jsx)(t.p,{children:"To import the hook you just have to use this code below."}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-tsx",children:"import { useTheme } from '@marigold/system';\n"})}),"\n",(0,n.jsx)(t.h2,{id:"examples",children:(0,n.jsx)(t.a,{href:"#examples",children:"Examples"})}),"\n",(0,n.jsx)(t.h3,{id:"get-all-the-theme-properties",children:(0,n.jsx)(t.a,{href:"#get-all-the-theme-properties",children:"Get all the Theme Properties"})}),"\n",(0,n.jsxs)(t.p,{children:["Here is an example which shows you the chosen theme from the theme switcher on the top of the page. With the ",(0,n.jsx)(t.code,{children:"useTheme"})," hook you can get the particular values for the available properties."]}),"\n",(0,n.jsx)(h,{children:(0,n.jsx)(t.useCurrentTheme,{})}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-tsx",children:"import { List } from '@marigold/components';\nimport { Box, ThemeProvider, useTheme } from '@marigold/system';\n\nexport const useCurrentTheme = () => {\n  const { theme } = useTheme();\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Box overflow=\"scroll\" width=\"100%\">\n        {Object.entries(theme).map(([key, value]) => (\n          <List key={key}>\n            <strong>{key}</strong>\n            <List.Item>{Object.keys(value) + ','}</List.Item>\n          </List>\n        ))}\n      </Box>\n    </ThemeProvider>\n  );\n};\n"})})]})}function l(e,t){throw Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}t.default=function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:t}=Object.assign({},(0,s.ah)(),e.components);return t?(0,n.jsx)(t,Object.assign({},e,{children:(0,n.jsx)(i,e)})):i(e)}}},function(e){e.O(0,[9774,2888,179],function(){return e(e.s=2145)}),_N_E=e.O()}]);