{"pageProps":{"source":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    a: \"a\",\n    p: \"p\",\n    code: \"code\",\n    pre: \"pre\",\n    h3: \"h3\"\n  }, _provideComponents(), props.components), {Toc, Preview, NumberField, PropsTable, BasicNumberField, DisabledNumberField, RequiredNumberField, ErrorNumberField, ValuesNumberField, AmountNumberField, HideNumberField, DecimalNumberField, CurrencyNumberField, PercentageNumberField, UnitNumberField} = _components;\n  if (!AmountNumberField) _missingMdxReference(\"AmountNumberField\", true);\n  if (!BasicNumberField) _missingMdxReference(\"BasicNumberField\", true);\n  if (!CurrencyNumberField) _missingMdxReference(\"CurrencyNumberField\", true);\n  if (!DecimalNumberField) _missingMdxReference(\"DecimalNumberField\", true);\n  if (!DisabledNumberField) _missingMdxReference(\"DisabledNumberField\", true);\n  if (!ErrorNumberField) _missingMdxReference(\"ErrorNumberField\", true);\n  if (!HideNumberField) _missingMdxReference(\"HideNumberField\", true);\n  if (!NumberField) _missingMdxReference(\"NumberField\", true);\n  if (!PercentageNumberField) _missingMdxReference(\"PercentageNumberField\", true);\n  if (!Preview) _missingMdxReference(\"Preview\", true);\n  if (!PropsTable) _missingMdxReference(\"PropsTable\", true);\n  if (!RequiredNumberField) _missingMdxReference(\"RequiredNumberField\", true);\n  if (!Toc) _missingMdxReference(\"Toc\", true);\n  if (!UnitNumberField) _missingMdxReference(\"UnitNumberField\", true);\n  if (!ValuesNumberField) _missingMdxReference(\"ValuesNumberField\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(Toc, {\n      selector: \"#toc\",\n      items: \"[{\\\"anchor\\\":\\\"#description\\\",\\\"title\\\":\\\"Description\\\"},{\\\"anchor\\\":\\\"#props\\\",\\\"title\\\":\\\"Props\\\"},{\\\"anchor\\\":\\\"#examples\\\",\\\"title\\\":\\\"Examples\\\"},{\\\"anchor\\\":\\\"#simple-number-field\\\",\\\"title\\\":\\\"Simple Number Field\\\"},{\\\"anchor\\\":\\\"#disabled-number-field\\\",\\\"title\\\":\\\"Disabled Number Field\\\"},{\\\"anchor\\\":\\\"#required-number-field\\\",\\\"title\\\":\\\"Required Number Field\\\"},{\\\"anchor\\\":\\\"#number-field-with-an-error\\\",\\\"title\\\":\\\"Number Field with an Error\\\"},{\\\"anchor\\\":\\\"#min-and-max-values\\\",\\\"title\\\":\\\"Min and max Values\\\"},{\\\"anchor\\\":\\\"#step-amount\\\",\\\"title\\\":\\\"Step Amount\\\"},{\\\"anchor\\\":\\\"#hide-stepper\\\",\\\"title\\\":\\\"Hide Stepper\\\"},{\\\"anchor\\\":\\\"#diplay-a-decimals\\\",\\\"title\\\":\\\"Diplay a Decimals\\\"},{\\\"anchor\\\":\\\"#diplay-a-currency\\\",\\\"title\\\":\\\"Diplay a Currency\\\"},{\\\"anchor\\\":\\\"#diplay-a-percentage\\\",\\\"title\\\":\\\"Diplay a Percentage\\\"},{\\\"anchor\\\":\\\"#display-a-unit\\\",\\\"title\\\":\\\"Display a Unit\\\"}]\"\n    }), _jsx(_components.h2, {\n      id: \"description\",\n      children: _jsx(_components.a, {\n        href: \"#description\",\n        children: \"Description\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.code, {\n        children: \"NumberField\"\n      }), \" components allows users to enter numbers with a keyboard. This includes plain numbers as well as percentages, decimals and sums of money. It consists of a label, an input field and a help text. The later also includes error messages.\"]\n    }), \"\\n\", _jsx(Preview, {\n      children: _jsx(NumberField, {\n        label: \"Try me\",\n        description: \"You should really try this!\",\n        defaultValue: 9.99,\n        formatOptions: {\n          style: 'currency',\n          currency: 'EUR'\n        }\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { NumberField } from '@marigold/components';\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"props\",\n      children: _jsx(_components.a, {\n        href: \"#props\",\n        children: \"Props\"\n      })\n    }), \"\\n\", _jsx(PropsTable, {\n      props: [{\n        property: 'label',\n        type: 'ReactNode',\n        description: 'The label text. ',\n        default: 'none'\n      }, {\n        property: 'description',\n        type: 'ReactNode',\n        description: '\tA helpful text.',\n        default: 'none'\n      }, {\n        property: 'errorMessage',\n        type: 'ReactNode',\n        description: 'An error message.',\n        default: 'none'\n      }, {\n        property: 'error',\n        type: 'boolean',\n        description: 'If `true`, the field is considered invalid and if set the errorMessage is shown instead of the `description`.',\n        default: 'false'\n      }, {\n        property: 'value',\n        type: 'number',\n        description: 'The value of the input field.',\n        default: 'none'\n      }, {\n        property: 'disabled',\n        type: 'boolean',\n        description: 'If `true`, the input is disabled.',\n        default: 'false'\n      }, {\n        property: 'required',\n        type: 'boolean',\n        description: 'If `true`, the input is required.',\n        default: 'false'\n      }, {\n        property: 'readOnly',\n        type: 'boolean',\n        description: 'If `true`, the input is readOnly.',\n        default: 'false'\n      }, {\n        property: 'onChange',\n        type: 'function',\n        description: \"A callback function that is called with the input's current value when the input value changes.\",\n        default: ''\n      }, {\n        property: 'formatOptions',\n        type: 'Intl.NumberFormatOptions',\n        description: 'Apply formatting. See `Intl.NumberFormatOptions` for available options.',\n        default: ''\n      }, {\n        property: 'width',\n        type: 'string',\n        description: 'Control the width of the field.',\n        default: '100%'\n      }, {\n        property: '...',\n        type: '',\n        description: 'Yes you can use all regular attributes of input!',\n        default: ''\n      }]\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"examples\",\n      children: _jsx(_components.a, {\n        href: \"#examples\",\n        children: \"Examples\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"simple-number-field\",\n      children: _jsx(_components.a, {\n        href: \"#simple-number-field\",\n        children: \"Simple Number Field\"\n      })\n    }), \"\\n\", _jsx(Preview, {\n      children: _jsx(BasicNumberField, {})\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { NumberField } from '@marigold/components';\\n\\nexport const BasicNumberField = () => <NumberField label=\\\"Numbers\\\" />;\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"disabled-number-field\",\n      children: _jsx(_components.a, {\n        href: \"#disabled-number-field\",\n        children: \"Disabled Number Field\"\n      })\n    }), \"\\n\", _jsx(Preview, {\n      children: _jsx(DisabledNumberField, {})\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { NumberField } from '@marigold/components';\\n\\nexport const DisabledNumberField = () => (\\n  <NumberField label=\\\"Field disabled\\\" disabled />\\n);\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"required-number-field\",\n      children: _jsx(_components.a, {\n        href: \"#required-number-field\",\n        children: \"Required Number Field\"\n      })\n    }), \"\\n\", _jsx(Preview, {\n      children: _jsx(RequiredNumberField, {})\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { NumberField } from '@marigold/components';\\n\\nexport const RequiredNumberField = () => (\\n  <NumberField label=\\\"Numbers\\\" required />\\n);\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"number-field-with-an-error\",\n      children: _jsx(_components.a, {\n        href: \"#number-field-with-an-error\",\n        children: \"Number Field with an Error\"\n      })\n    }), \"\\n\", _jsx(Preview, {\n      children: _jsx(ErrorNumberField, {})\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { NumberField } from '@marigold/components';\\n\\nexport const ErrorNumberField = () => (\\n  <NumberField label=\\\"Amount\\\" error errorMessage=\\\"Something went wrong!\\\" />\\n);\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"min-and-max-values\",\n      children: _jsx(_components.a, {\n        href: \"#min-and-max-values\",\n        children: \"Min and max Values\"\n      })\n    }), \"\\n\", _jsx(Preview, {\n      children: _jsx(ValuesNumberField, {})\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { NumberField } from '@marigold/components';\\n\\nexport const ValuesNumberField = () => (\\n  <NumberField label=\\\"Length\\\" defaultValue={55} minValue={0} maxValue={100} />\\n);\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"step-amount\",\n      children: _jsx(_components.a, {\n        href: \"#step-amount\",\n        children: \"Step Amount\"\n      })\n    }), \"\\n\", _jsx(Preview, {\n      children: _jsx(AmountNumberField, {})\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { NumberField } from '@marigold/components';\\n\\nexport const AmountNumberField = () => (\\n  <NumberField label=\\\"Length\\\" defaultValue={10} step={10} />\\n);\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"hide-stepper\",\n      children: _jsx(_components.a, {\n        href: \"#hide-stepper\",\n        children: \"Hide Stepper\"\n      })\n    }), \"\\n\", _jsx(Preview, {\n      children: _jsx(HideNumberField, {})\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { NumberField } from '@marigold/components';\\n\\nexport const HideNumberField = () => (\\n  <NumberField label=\\\"Numbers\\\" hideStepper />\\n);\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"diplay-a-decimals\",\n      children: _jsx(_components.a, {\n        href: \"#diplay-a-decimals\",\n        children: \"Diplay a Decimals\"\n      })\n    }), \"\\n\", _jsx(Preview, {\n      children: _jsx(DecimalNumberField, {})\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { NumberField } from '@marigold/components';\\n\\nexport const DecimalNumberField = () => (\\n  <NumberField\\n    label=\\\"Decimals\\\"\\n    formatOptions={{\\n      signDisplay: 'exceptZero',\\n      minimumFractionDigits: 1,\\n      maximumFractionDigits: 2,\\n    }}\\n    defaultValue={0}\\n  />\\n);\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"diplay-a-currency\",\n      children: _jsx(_components.a, {\n        href: \"#diplay-a-currency\",\n        children: \"Diplay a Currency\"\n      })\n    }), \"\\n\", _jsx(Preview, {\n      children: _jsx(CurrencyNumberField, {})\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { NumberField } from '@marigold/components';\\n\\nexport const CurrencyNumberField = () => (\\n  <NumberField\\n    label=\\\"Amount\\\"\\n    defaultValue={19.99}\\n    formatOptions={{\\n      style: 'currency',\\n      currency: 'USD',\\n    }}\\n  />\\n);\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"diplay-a-percentage\",\n      children: _jsx(_components.a, {\n        href: \"#diplay-a-percentage\",\n        children: \"Diplay a Percentage\"\n      })\n    }), \"\\n\", _jsx(Preview, {\n      children: _jsx(PercentageNumberField, {})\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { NumberField } from '@marigold/components';\\n\\nexport const PercentageNumberField = () => (\\n  <NumberField\\n    label=\\\"Percentage\\\"\\n    defaultValue={0.42}\\n    formatOptions={{\\n      style: 'percent',\\n    }}\\n  />\\n);\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"display-a-unit\",\n      children: _jsx(_components.a, {\n        href: \"#display-a-unit\",\n        children: \"Display a Unit\"\n      })\n    }), \"\\n\", _jsx(Preview, {\n      children: _jsx(UnitNumberField, {})\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { NumberField } from '@marigold/components';\\n\\nexport const UnitNumberField = () => (\\n  <NumberField\\n    label=\\\"Length\\\"\\n    defaultValue={150}\\n    minValue={0}\\n    formatOptions={{\\n      style: 'unit',\\n      unit: 'centimeter',\\n      unitDisplay: 'short',\\n    }}\\n  />\\n);\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"title":"NumberField","group":"Forms","switch":true},"scope":{}},"navigation":[{"title":"Code Hightlight Test","slug":"highlight"},{"title":"Marigold","slug":"index"},{"name":"introduction","items":[{"title":"Getting Started","caption":"This page describes how to get started building an application with Marigold.","order":1,"slug":"introduction/getting-started"},{"title":"About","caption":"Learn about the goals of Marigold and how it aims to help building user interfaces.","order":2,"slug":"introduction/about"},{"title":"Concepts","caption":"This page discusses the concepts and ideas that Marigold is build upon.","order":3,"slug":"introduction/concepts"},{"title":"Theming","caption":"This page explains how themes workd and how to use them.","order":4,"slug":"introduction/theming"},{"title":"FAQ","caption":"This pages aims to help with the most common questions and inquiries.","order":0,"slug":"introduction/faq"}],"groups":[]},{"name":"foundation","items":[{"title":"Box Primitive","slug":"foundation/box-primitive"},{"title":"CSS-in-JS","slug":"foundation/css-in-js"},{"title":"Icons","slug":"foundation/icons"},{"title":"Theme & Variants","slug":"foundation/themes-variants"}],"groups":[]},{"name":"components","items":[],"groups":[{"name":"Layout","items":[{"title":"Aside","group":"Layout","slug":"components/aside"},{"title":"Aspect","group":"Layout","slug":"components/aspect"},{"title":"Box","group":"Layout","switch":true,"slug":"components/box"},{"title":"Breakout","group":"Layout","slug":"components/breakout"},{"title":"Center","group":"Layout","slug":"components/center"},{"title":"Columns","group":"Layout","slug":"components/columns"},{"title":"Container","group":"Layout","slug":"components/container"},{"title":"Content","group":"Layout","slug":"components/content"},{"title":"Divider","group":"Layout","slug":"components/divider"},{"title":"Inline","group":"Layout","slug":"components/inline"},{"title":"Split","group":"Layout","slug":"components/split"},{"title":"Stack","group":"Layout","slug":"components/stack"},{"title":"Tiles","group":"Layout","slug":"components/tiles"}]},{"name":"Forms","items":[{"title":"Button","group":"Forms","figma":"https://www.figma.com/file/DFKyTGHAoDxOsUBPszLLxP/%F0%9F%8F%B5%EF%B8%8FMarigold?node-id=11%3A269","switch":true,"slug":"components/button"},{"title":"Checkbox","figma":"https://www.figma.com/file/DFKyTGHAoDxOsUBPszLLxP/%F0%9F%8F%B5%EF%B8%8FMarigold?node-id=467%3A159","group":"Forms","switch":true,"slug":"components/checkbox"},{"title":"Input","group":"Forms","switch":true,"slug":"components/input"},{"title":"Label","group":"Forms","figma":"https://www.figma.com/file/DFKyTGHAoDxOsUBPszLLxP/%F0%9F%8F%B5%EF%B8%8FMarigold?node-id=92%3A0","switch":true,"slug":"components/label"},{"title":"NumberField","group":"Forms","switch":true,"slug":"components/number-field"},{"title":"Radio","group":"Forms","figma":"https://www.figma.com/file/DFKyTGHAoDxOsUBPszLLxP/%F0%9F%8F%B5%EF%B8%8FMarigold?node-id=467%3A332","switch":true,"slug":"components/radio"},{"title":"Select","group":"Forms","caption":"Dropdown for selecting an Option among different options.","figma":"https://www.figma.com/file/DFKyTGHAoDxOsUBPszLLxP/%F0%9F%8F%B5%EF%B8%8FMarigold?node-id=2596%3A2348","switch":true,"slug":"components/select"},{"title":"Slider","group":"Forms","figma":"https://www.figma.com/file/DFKyTGHAoDxOsUBPszLLxP/%F0%9F%8F%B5%EF%B8%8FMarigold?node-id=845%3A1254","switch":true,"slug":"components/slider"},{"title":"Switch","group":"Forms","figma":"https://www.figma.com/file/DFKyTGHAoDxOsUBPszLLxP/%F0%9F%8F%B5%EF%B8%8FMarigold?node-id=2458%3A2254","switch":true,"slug":"components/switch"},{"title":"TextArea","figma":"https://www.figma.com/file/DFKyTGHAoDxOsUBPszLLxP/%F0%9F%8F%B5%EF%B8%8FMarigold?node-id=454%3A1","group":"Forms","switch":true,"slug":"components/text-area"},{"title":"TextField","figma":"https://www.figma.com/file/DFKyTGHAoDxOsUBPszLLxP/%F0%9F%8F%B5%EF%B8%8FMarigold?node-id=340%3A0","group":"Forms","switch":true,"slug":"components/text-field"}]},{"name":"Collections","items":[{"title":"Table","group":"Collections","figma":"https://www.figma.com/file/DFKyTGHAoDxOsUBPszLLxP/%F0%9F%8F%B5%EF%B8%8FMarigold?node-id=2387%3A1928","switch":true,"slug":"components/table"}]},{"name":"Overlay","items":[{"title":"Dialog","group":"Overlay","figma":"https://www.figma.com/file/DFKyTGHAoDxOsUBPszLLxP/%F0%9F%8F%B5%EF%B8%8FMarigold?node-id=845%3A1095","switch":true,"slug":"components/dialog"},{"title":"Menu","group":"Overlay","slug":"components/menu"},{"title":"Tooltip","group":"Overlay","slug":"components/tooltip"}]},{"name":"Content","items":[{"title":"Badge","group":"Content","switch":true,"slug":"components/badge"},{"title":"Card","group":"Content","switch":true,"slug":"components/card"},{"title":"Footer","group":"Content","switch":true,"slug":"components/footer"},{"title":"Header","group":"Content","switch":true,"slug":"components/header"},{"title":"Headline","group":"Content","switch":true,"slug":"components/headline"},{"title":"Icon","group":"Content","switch":true,"slug":"components/icon"},{"title":"Image","group":"Content","slug":"components/image"},{"title":"Link","group":"Content","switch":true,"slug":"components/link"},{"title":"List","group":"Content","switch":true,"slug":"components/list"},{"title":"Message","group":"Content","figma":"https://www.figma.com/file/DFKyTGHAoDxOsUBPszLLxP/%F0%9F%8F%B5%EF%B8%8FMarigold?node-id=582%3A119","switch":true,"slug":"components/message"},{"title":"Text","group":"Content","switch":true,"slug":"components/text"},{"title":"VisuallyHidden","group":"Content","slug":"components/visually-hidden"}]},{"name":"Application","items":[{"title":"Provider","group":"Application","slug":"components/provider"}]}]},{"name":"develop","items":[{"title":"Release","slug":"develop/release"},{"title":"Scripts","slug":"develop/scripts"}],"groups":[]}]},"__N_SSG":true}