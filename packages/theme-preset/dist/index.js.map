{"version":3,"sources":["../src/index.ts","../src/create-preset.ts"],"sourcesContent":["export * from './create-preset';\n","import deepmerge from 'deepmerge';\nimport plugin from 'tailwindcss/plugin';\nimport type { Config, OptionalConfig } from 'tailwindcss/types/config';\n\nimport { defaultTheme } from '@marigold/system';\n\nexport const createPreset = (name: string, config: Partial<OptionalConfig>) =>\n  deepmerge<Partial<OptionalConfig> & { content: string[] }>(\n    {\n      important: `[data-theme=\"${name}\"]`,\n      content: ['./node_modules/@marigold/components/dist/**/*.js'],\n      theme: {\n        extends: {\n          defaultTheme,\n        },\n      },\n      plugins: [\n        // Grouping\n        plugin(({ matchVariant, e }) => {\n          matchVariant(\n            'group',\n            (value, { modifier }) =>\n              modifier\n                ? `:merge(.group\\\\/${e(modifier)})[data-${value}] &`\n                : `:merge(.group)[data-${value}] &`,\n            {\n              values: {\n                focus: 'focus',\n                hover: 'hover',\n                error: 'error',\n                readonly: 'read-only',\n                required: 'required',\n                selected: 'selected',\n                checked: 'checked',\n                indeterminate: 'indeterminate',\n                disabled: 'disabled',\n                placementL: 'placement=\"left\"',\n                placementR: 'placement=\"right\"',\n                placementT: 'placement=\"top\"',\n                placementB: 'placement=\"bottom\"',\n              },\n            }\n          );\n          matchVariant(\n            'placement',\n            value => {\n              return `&[data-placement=${value}]`;\n            },\n            {\n              values: {\n                t: 'top',\n                r: 'right',\n                b: 'bottom',\n                l: 'left',\n              },\n            }\n          );\n        }),\n        // Aria Variants\n        plugin(({ addVariant }) => {\n          addVariant('aria-enabled', ['&:not([aria-disabled=true])']);\n        }),\n      ],\n    },\n    config\n  ) satisfies Config;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAA,uBAAsB;AACtB,oBAAmB;AAGnB,oBAA6B;AAEtB,IAAM,eAAe,CAAC,MAAc,eACzC,iBAAAA;AAAA,EACE;AAAA,IACE,WAAW,gBAAgB,IAAI;AAAA,IAC/B,SAAS,CAAC,kDAAkD;AAAA,IAC5D,OAAO;AAAA,MACL,SAAS;AAAA,QACP;AAAA,MACF;AAAA,IACF;AAAA,IACA,SAAS;AAAA;AAAA,UAEP,cAAAC,SAAO,CAAC,EAAE,cAAc,EAAE,MAAM;AAC9B;AAAA,UACE;AAAA,UACA,CAAC,OAAO,EAAE,SAAS,MACjB,WACI,mBAAmB,EAAE,QAAQ,CAAC,UAAU,KAAK,QAC7C,uBAAuB,KAAK;AAAA,UAClC;AAAA,YACE,QAAQ;AAAA,cACN,OAAO;AAAA,cACP,OAAO;AAAA,cACP,OAAO;AAAA,cACP,UAAU;AAAA,cACV,UAAU;AAAA,cACV,UAAU;AAAA,cACV,SAAS;AAAA,cACT,eAAe;AAAA,cACf,UAAU;AAAA,cACV,YAAY;AAAA,cACZ,YAAY;AAAA,cACZ,YAAY;AAAA,cACZ,YAAY;AAAA,YACd;AAAA,UACF;AAAA,QACF;AACA;AAAA,UACE;AAAA,UACA,WAAS;AACP,mBAAO,oBAAoB,KAAK;AAAA,UAClC;AAAA,UACA;AAAA,YACE,QAAQ;AAAA,cACN,GAAG;AAAA,cACH,GAAG;AAAA,cACH,GAAG;AAAA,cACH,GAAG;AAAA,YACL;AAAA,UACF;AAAA,QACF;AAAA,MACF,CAAC;AAAA;AAAA,UAED,cAAAA,SAAO,CAAC,EAAE,WAAW,MAAM;AACzB,mBAAW,gBAAgB,CAAC,6BAA6B,CAAC;AAAA,MAC5D,CAAC;AAAA,IACH;AAAA,EACF;AAAA,EACA;AACF;","names":["deepmerge","plugin"]}